{"version":3,"file":"blink-geo-map-5f853273.js","sources":["../../../app/.tmp/ts-out/src/common/widgets/color-scale/color-scale.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/geo-data-label-manager.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/geo-coordinates.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/geo-bounds.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/metadata-services/geo-topology-data-store.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/metadata-services/usa-states.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/metadata-services/geo-entity-matching-service.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/base/geo-data-processor.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/sources/base-vector-source.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/layers/base-image-layer.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/layers/bubble-layer.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/layers/geo-object-layer.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/layers/heatmap-layer.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/layers/topology-layer.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/loaders/observable-feature-loader.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/loaders/polygon-feature-loader.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/geomap/2d/blink-geo-map.js"],"sourcesContent":["/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview UI component to show a color range.\n */\nimport * as tslib_1 from \"tslib\";\nvar ColorScaleComponent_1;\nimport _ from 'lodash';\nimport { BaseComponent } from '../../../base/base-types/base-component';\nimport { Component } from '../../../base/decorators';\nlet ColorScaleComponent = ColorScaleComponent_1 = class ColorScaleComponent extends BaseComponent {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.disableScaling = false;\n        this.leftText = options.leftText;\n        this.rightText = options.rightText;\n        this.getSelectedColor = options.getSelectedColor ? options.getSelectedColor : _.noop;\n        this.onClickBox = _.isFunction(options.onSelection) ? options.onSelection : _.noop;\n        let resolution = options.resolution || ColorScaleComponent_1.DEFAULT_RESOLUTION;\n        this.disableScaling = options.disableScaling || false;\n        this.colors = [];\n        if (this.disableScaling) {\n            let colorList = options.colors;\n            this.colors = colorList;\n        }\n        else {\n            let colorFunc = options.colors;\n            if (!_.isFunction(colorFunc)) {\n                colorFunc = chroma.scale(colorFunc);\n            }\n            for (let i = 0; i < resolution; i++) {\n                this.colors.push(colorFunc(i / (resolution - 1))\n                    .toString());\n            }\n        }\n    }\n    static __getExamples() {\n        return [\n            {\n                ctrl: new ColorScaleComponent_1({\n                    colors: ['yellow', 'red', 'green'],\n                    resolution: 100,\n                    leftText: '12.3K',\n                    rightText: '1.3M'\n                })\n            }\n        ];\n    }\n    isSelectedColor(color) {\n        return color === this.getSelectedColor();\n    }\n    isDiscreetColorScale() {\n        return !!this.options.isDiscreetColorScale;\n    }\n};\nColorScaleComponent.DEFAULT_RESOLUTION = 100;\nColorScaleComponent = ColorScaleComponent_1 = tslib_1.__decorate([\n    Component({\n        name: 'bkColorScale',\n        templateUrl: 'src/common/widgets/color-scale/color-scale.html'\n    })\n], ColorScaleComponent);\nexport default ColorScaleComponent;\n//# sourceMappingURL=color-scale.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview A class to manage the logic around data labels placement.\n */\nimport _ from 'lodash';\nimport { DATA_LABEL_AVG_CHAR_WIDTH, DATA_LABEL_LINE_HEIGHT } from './geo-constants';\nexport default class GeoDataLabelManager {\n    static chooseFeaturesForLabeling(options) {\n        let width = options.width, height = options.height;\n        let onScreenFeatures = {};\n        options.features.forEach((feature) => {\n            let coords = options.coordinateFunc(feature);\n            if (coords[0] < 0 || coords[1] < 0 ||\n                coords[0] > width || coords[1] > height) {\n                return;\n            }\n            onScreenFeatures[feature.getId()] = coords;\n        });\n        let chosenFeatures = {};\n        if (options.prioritize_existing) {\n            // First prioritise to those which had labels in the last pass.\n            if (options.existing_labeled_features === void 0) {\n                throw new Error('existing labeled features must be provided if prioritize_existing' +\n                    ' is passed true');\n            }\n            options.existing_labeled_features.forEach((featureId) => {\n                if (_.has(onScreenFeatures, featureId)) {\n                    chosenFeatures[featureId] = onScreenFeatures[featureId];\n                }\n            });\n        }\n        let labelWidths = new Map();\n        options.labels.forEach((label, featureId) => {\n            let lines = label.split('\\n');\n            let maxLineLength = Math.max(...lines.map((line) => line.length));\n            labelWidths.set(featureId, maxLineLength * DATA_LABEL_AVG_CHAR_WIDTH);\n        });\n        for (let featureId in onScreenFeatures) {\n            if (chosenFeatures[featureId]) {\n                continue;\n            }\n            let clash = false;\n            let coords = onScreenFeatures[featureId];\n            let maxAllowedYDiff = 2 * DATA_LABEL_LINE_HEIGHT;\n            for (let key in chosenFeatures) {\n                let labeledPoint = chosenFeatures[key];\n                let maxAllowedXDiff = (labelWidths.get(featureId) + labelWidths.get(key)) / 2;\n                if (Math.abs(labeledPoint[0] - coords[0]) < maxAllowedXDiff &&\n                    Math.abs(labeledPoint[1] - coords[1]) < maxAllowedYDiff) {\n                    clash = true;\n                    break;\n                }\n            }\n            if (!clash) {\n                chosenFeatures[featureId] = coords;\n            }\n        }\n        return new Set(Object.keys(chosenFeatures));\n    }\n}\n//# sourceMappingURL=geo-data-label-manager.js.map","/**\n * Copyright: ThoughtSpot Inc. 2012-2015\n * Author: Utsav kapoor (utsav.kapoor@thoughtspot.com)\n *\n * @fileoverview Models to get geo-coordinates.\n *\n */\n'use strict';\nimport * as tslib_1 from \"tslib\";\nimport { Provide } from '../../../../../../base/decorators';\nlet GeoCoordinates = class GeoCoordinates {\n    constructor(latitude, longitude, altitude = 0) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.altitude = isNaN(altitude) ? 0 : altitude;\n    }\n};\nGeoCoordinates = tslib_1.__decorate([\n    Provide('GeoCoordinates')\n], GeoCoordinates);\nexport { GeoCoordinates };\n//# sourceMappingURL=geo-coordinates.js.map","/**\n * Copyright: ThoughtSpot Inc. 2012-2015\n * Author: Shashank Singh (sunny@thoughtspot.com)\n *\n * @fileoverview Models to represent geographical boundaries.\n *\n */\nimport * as tslib_1 from \"tslib\";\nvar GeoBounds_1;\n'use strict';\nimport { Provide } from '../../../../../../base/decorators';\nimport { GeoCoordinates } from './geo-coordinates';\nimport { GeoUtils } from './geo-utils';\nlet GeoBounds = GeoBounds_1 = class GeoBounds {\n    /**\n     *\n     * @param {=GeoCoordinates} bottomLeft\n     * @param {=GeoCoordinates} topRight\n     * @constructor\n     */\n    constructor(bottomLeft = null, topRight = null) {\n        this.topRight = topRight === void 0 ? null : topRight;\n        this.bottomLeft = bottomLeft === void 0 ? null : bottomLeft;\n        this.topLeft = null;\n        this.bottomRight = null;\n        this.updateDerivedCorners(this);\n    }\n    /**\n     * Creates a new GeoBounds instance from the min/max lat/long pairs provided.\n     * Note that this method does not support bounds that cross the date line.\n     * It assumes that the bottomLeft of the viewport is the min lat/long and\n     * the topRight is the max lat/long which is not always correct if the\n     * bound includes the date line.\n     *\n     * @param {Number} minLat\n     * @param {Number} minLon\n     * @param {Number} maxLat\n     * @param {Number} maxLon\n     * @returns {GeoBounds}\n     */\n    fromBounds(minLat, minLon, maxLat, maxLon) {\n        return new GeoBounds_1(new GeoCoordinates(minLat, minLon, 0), new GeoCoordinates(maxLat, maxLon, 0));\n    }\n    /**\n     * @returns {boolean}\n     */\n    isEmpty() {\n        return this.bottomLeft === null || this.topRight === null;\n    }\n    /**\n     * @returns {boolean}\n     */\n    crossesDateLine() {\n        return this.bottomLeft.longitude > this.topRight.longitude;\n    }\n    /**\n     * Extends the bounds to include the provided coordinate. If _allowCrossingDateLine_ is set to\n     * true and the bounds are not already crossing the date line the bounds will be cross the date\n     * if needed to minimize the area added to include the new point.\n     * If the bounds is already crossing the date line _allowCrossingDateLine_ is ignored.\n     *\n     * @param lat\n     * @param lon\n     * @param allowCrossingDateLine\n     */\n    extendToIncludePoint(lat, lon, allowCrossingDateLine) {\n        if (this.isEmpty()) {\n            this.bottomLeft = new GeoCoordinates(lat, lon);\n            this.topRight = new GeoCoordinates(lat, lon);\n            this.updateDerivedCorners(this);\n            return;\n        }\n        let distanceFromLeft, distanceFromRight;\n        if (this.crossesDateLine() || !allowCrossingDateLine) {\n            distanceFromLeft = lon - this.bottomLeft.longitude;\n            distanceFromRight = lon - this.topRight.longitude;\n        }\n        else {\n            let longRange = (GeoUtils.constants.MAP_MAX_LONGITUDE -\n                GeoUtils.constants.MAP_MIN_LONGITUDE);\n            distanceFromLeft = (lon + longRange) % longRange -\n                (this.bottomLeft.longitude + longRange) % longRange;\n            distanceFromRight = (lon + longRange) % longRange -\n                (this.topRight.longitude + longRange) % longRange;\n        }\n        if (distanceFromLeft < 0 || distanceFromRight > 0) {\n            // we have a choice to extend either left or right, we choose\n            // the one that will cause minimum increase in area\n            if (Math.abs(distanceFromLeft) < Math.abs(distanceFromRight)) {\n                this.bottomLeft.longitude = lon;\n            }\n            else {\n                this.topRight.longitude = lon;\n            }\n        }\n        if (lat < this.bottomLeft.latitude) {\n            this.bottomLeft.latitude = lat;\n        }\n        else if (lat > this.topRight.latitude) {\n            this.topRight.latitude = lat;\n        }\n        this.updateDerivedCorners(this);\n    }\n    expand(latitudeIncrement, longitudeIncrement, allowCrossingDateLine) {\n        this.topRight.latitude = Math.min(GeoUtils.constants.MAP_MAX_LATITUDE, this.topRight.latitude + latitudeIncrement / 2);\n        this.bottomLeft.latitude = Math.max(GeoUtils.constants.MAP_MIN_LATITUDE, this.bottomLeft.latitude - latitudeIncrement / 2);\n        if (this.crossesDateLine()) {\n            allowCrossingDateLine = true;\n        }\n        this.bottomLeft.longitude -= longitudeIncrement / 2;\n        this.topRight.longitude += longitudeIncrement / 2;\n        if (allowCrossingDateLine) {\n            let longRange = (GeoUtils.constants.MAP_MAX_LONGITUDE -\n                GeoUtils.constants.MAP_MIN_LONGITUDE);\n            if (this.bottomLeft.longitude <= GeoUtils.constants.MAP_MIN_LONGITUDE) {\n                this.bottomLeft.longitude = (this.bottomLeft.longitude + longRange) % longRange;\n            }\n            if (this.topRight.longitude > GeoUtils.constants.MAP_MAX_LONGITUDE) {\n                this.topRight.longitude = (this.topRight.longitude - longRange) % longRange;\n            }\n        }\n        else {\n            this.bottomLeft.longitude = Math.max(GeoUtils.constants.MAP_MIN_LONGITUDE, this.bottomLeft.longitude);\n            this.topRight.longitude = Math.min(GeoUtils.constants.MAP_MAX_LONGITUDE, this.topRight.longitude);\n        }\n        this.updateDerivedCorners(this);\n    }\n    /**\n     * Returns the area of the bounds in earth radius units.\n     * @returns {number}\n     */\n    getArea() {\n        let latitudeRange = this.topRight.latitude - this.bottomLeft.latitude;\n        // the range could cross the date line, we compute the range length thus:\n        // Possible cases:\n        // MIN --- L --- R --- MAX\n        // L --- MAX --- R --- MIN\n        // L --- MIN --- R --- MAX\n        // with the last two cases being equivalent.\n        // We compute the range as ((MAX - L) + (R - MIN))%(MIN - MAX) which covers all the cases\n        let leftRectangleLonRange = GeoUtils.constants.MAP_MAX_LONGITUDE -\n            this.bottomLeft.longitude;\n        let rightRectangleLonRange = this.topRight.longitude -\n            GeoUtils.constants.MAP_MIN_LONGITUDE;\n        let earthLonRange = GeoUtils.constants.MAP_MAX_LONGITUDE -\n            GeoUtils.constants.MAP_MIN_LONGITUDE;\n        let longitudeRange = (leftRectangleLonRange + rightRectangleLonRange);\n        if (longitudeRange > earthLonRange) {\n            longitudeRange -= earthLonRange;\n        }\n        return (latitudeRange * longitudeRange);\n    }\n    updateDerivedCorners(bounds) {\n        if (bounds.isEmpty()) {\n            bounds.topLeft = bounds.bottomRight = null;\n            return;\n        }\n        bounds.topLeft = new GeoCoordinates(bounds.topRight.latitude, bounds.bottomLeft.longitude);\n        bounds.bottomRight = new GeoCoordinates(bounds.bottomLeft.latitude, bounds.topRight.longitude);\n    }\n};\nGeoBounds = GeoBounds_1 = tslib_1.__decorate([\n    Provide('GeoBounds')\n], GeoBounds);\nexport { GeoBounds };\n//# sourceMappingURL=geo-bounds.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview This file serves as a one stop shop for fetching and caching of topology\n * data for polygons and centroids for given country and given admin level. It ensures that\n * nothing is fetched or parsed twice.\n *\n * This class offers following 2 convenient functions for retrieving data.\n * 1. Async: GeoTopologyDataStore.getFeatures()\n * 2. Sync: GeoTopologyDataStore.getFeaturesFromCache()\n */\nimport { jsonConstants } from '@thoughtspot/json-constants/json-constants';\nimport ol from '@thoughtspot/openlayers';\nimport _ from 'lodash';\nimport { ngRequire } from '../../../../../../../base/decorators';\nimport { DATA_PROJECTION, VIEW_PROJECTION } from '../geo-constants';\nimport { GeoUtils } from '../geo-utils';\nimport GeoPropField from './geo-prop-field';\nlet $http = ngRequire('$http');\nexport default class GeoTopologyDataStore {\n    /**\n     * Async function to fetch geo features for a given configuration, takes care of caching so that\n     * no file is fetched of parsed twice.\n     * @param geometryType geometry flavor, either 'POLYGON' or 'POINT'.\n     * @param level  Admin level.\n     * @param country Country to fetch data for, no need to specify if level is admin level 0.\n     * @param customFileGuid\n     * @returns {IPromise<ol.Feature[]>}\n     */\n    static getFeatures(geometryType, level, country, customFileGuid) {\n        GeoTopologyDataStore.assertValidParams(geometryType, level, country, customFileGuid);\n        let cacheKey = GeoTopologyDataStore.getDataJsonKey(level, geometryType, country, customFileGuid);\n        if (GeoTopologyDataStore.featuresCache[geometryType][cacheKey]) {\n            return Promise.resolve(GeoTopologyDataStore.featuresCache[geometryType][cacheKey]);\n        }\n        // If polygons features are already present for the same configuration, we can get the\n        // point features by getting the interior point of each feature.\n        let polygonCacheKey = GeoTopologyDataStore.getDataJsonKey(level, 'POLYGON', country, customFileGuid);\n        if (geometryType === 'POINT' &&\n            !!GeoTopologyDataStore.featuresCache['POLYGON'][polygonCacheKey]) {\n            let polygonFeatures = GeoTopologyDataStore.featuresCache['POLYGON'][polygonCacheKey];\n            let pointsFeatures = polygonFeatures.map((feature) => {\n                let props = $.extend({}, feature.getProperties());\n                props.geometry = GeoUtils.getInteriorPoint(feature);\n                let pointFeature = new ol.Feature(props);\n                pointFeature.setId(props.GEOID);\n                return pointFeature;\n            });\n            GeoTopologyDataStore.featuresCache[geometryType][cacheKey] = pointsFeatures;\n            return Promise.resolve(pointsFeatures);\n        }\n        let pendingCallExists = _.has(GeoTopologyDataStore.pendingPromises[geometryType], cacheKey);\n        if (pendingCallExists) {\n            return GeoTopologyDataStore.pendingPromises[geometryType][cacheKey];\n        }\n        return new Promise((resolve, reject) => {\n            let url = GeoTopologyDataStore.getDataJsonURL(level, geometryType, country, customFileGuid);\n            $http.get(url).then((response) => GeoTopologyDataStore.httpSuccessCallback(response, geometryType, cacheKey, level, resolve), (response) => GeoTopologyDataStore.httpErrorCallback(response, reject));\n        });\n    }\n    /**\n     * Same as getFeatures() except that it only checks the cache. Won't make a network call, hence\n     * synchronous.\n     * @param geometryType\n     * @param level\n     * @param isoCode\n     * @param customFileGuid\n     * @returns {ol.Feature[]}\n     */\n    static getFeaturesFromCache(geometryType, level, isoCode, customFileGuid) {\n        GeoTopologyDataStore.assertValidParams(geometryType, level, isoCode, customFileGuid);\n        let cacheKey = GeoTopologyDataStore.getDataJsonKey(level, geometryType, isoCode, customFileGuid);\n        if (!GeoTopologyDataStore.featuresCache[geometryType][cacheKey]) {\n            throw new Error('Features not found in cache for: ' + geometryType + ', ' + level + ', ' + isoCode);\n        }\n        return GeoTopologyDataStore.featuresCache[geometryType][cacheKey];\n    }\n    static assertValidParams(geometryType, level, country, customFileGuid) {\n        if (GeoTopologyDataStore.validLevels.indexOf(level) === -1) {\n            throw new Error('Invalid level passed');\n        }\n        if (level === jsonConstants.geoConfigType.ZIP_CODE && geometryType !== 'POINT') {\n            throw new Error('Only point geometry is supported for zip codes');\n        }\n        if (GeoTopologyDataStore.levelsWithParentCountry.indexOf(level) !== -1 && !country) {\n            throw new Error('country code must be passed for ' + level);\n        }\n        if (level === jsonConstants.geoConfigType.CUSTOM_REGION && !customFileGuid) {\n            throw new Error('region def key must be passed for custom region');\n        }\n    }\n    static httpSuccessCallback(response, geometryType, cacheKey, level, promiseResolver) {\n        let features;\n        if (level === jsonConstants.geoConfigType.CUSTOM_REGION) {\n            features =\n                GeoTopologyDataStore.buildFeaturesForCustomRegion(geometryType, response.data);\n        }\n        else if (level === jsonConstants.geoConfigType.ZIP_CODE) {\n            features = GeoTopologyDataStore.buildPointFeaturesForZipCode(response.data);\n        }\n        else {\n            // Note: config object that defines 'featureProjection' is undocumented\n            // (and missing in typings too) that's why we have to make it untyped first\n            // before calling.\n            features = GeoTopologyDataStore.DATA_FORMAT.readFeatures(response.data, { featureProjection: VIEW_PROJECTION });\n        }\n        features.forEach((feature) => {\n            let id = feature.getProperties()[GeoPropField.GEOID.toString()];\n            feature.setId(id);\n        });\n        GeoTopologyDataStore.featuresCache[geometryType][cacheKey] = features;\n        promiseResolver(features);\n    }\n    static httpErrorCallback(response, promiseRejector) {\n        promiseRejector(response.status);\n    }\n    static getDataJsonKey(level, geometryType, isoCode, customFileGuid) {\n        switch (level) {\n            case jsonConstants.geoConfigType.ADMIN_DIV_0:\n                return `${level}-${geometryType}.topo.json`;\n            case jsonConstants.geoConfigType.ZIP_CODE:\n                return `${level}-${isoCode}.json`;\n            case jsonConstants.geoConfigType.CUSTOM_REGION:\n                return customFileGuid;\n            default:\n                return `${level}-${isoCode}-${geometryType}.topo.json`;\n        }\n    }\n    static getDataJsonURL(level, geometryType, isoCode, customFileGuid) {\n        let fileName = GeoTopologyDataStore.getDataJsonKey(level, geometryType, isoCode, customFileGuid);\n        if (level === jsonConstants.geoConfigType.CUSTOM_REGION) {\n            return `/callosum/v1/file/getfile/${fileName}`;\n        }\n        return `/resources/geo/topojson/${fileName}`;\n    }\n    static buildPointFeaturesForZipCode(zipCodeDataArray) {\n        // Array of zip-code, lat, long\n        return zipCodeDataArray.map((zipCodeData) => {\n            let zipCode = zipCodeData[0], lat = zipCodeData[1], long = zipCodeData[2];\n            // See note in GeoMapComponent class about projections.\n            let coords = ol.proj.transform([long, lat], DATA_PROJECTION, VIEW_PROJECTION);\n            let props = {\n                GEOID: zipCode,\n                geometry: new ol.geom.Point(coords)\n            };\n            return new ol.Feature(props);\n        });\n    }\n    static buildFeaturesForCustomRegion(geometryType, customData) {\n        let regionIDToCoords = {};\n        customData.trim().split('\\n').slice(1).forEach((line) => {\n            let vals = line.trim().split(',').map(function (str) {\n                return str.trim();\n            });\n            let regionID = vals[0];\n            vals = vals.slice(1).map((val) => +val);\n            regionIDToCoords[regionID] = regionIDToCoords[regionID] || [];\n            regionIDToCoords[regionID].push(vals);\n        });\n        let features = [];\n        for (let regionID in regionIDToCoords) {\n            let coords = regionIDToCoords[regionID];\n            // If order ID is also present in the file, then sort the points in the given order.\n            if (coords.every((vals) => {\n                return vals.length === 3;\n            })) {\n                coords.sort(function (vals1, vals2) {\n                    return vals1[2] < vals2[2];\n                });\n            }\n            coords = coords.map((coord) => {\n                let lat = coord[0], long = coord[1];\n                return ol.proj.transform([long, lat], DATA_PROJECTION, VIEW_PROJECTION);\n            });\n            let feature = new ol.Feature({\n                GEOID: regionID,\n                geometry: new ol.geom.Polygon([coords])\n            });\n            if (geometryType === 'POINT') {\n                feature.setGeometry(GeoUtils.getInteriorPoint(feature));\n            }\n            features.push(feature);\n        }\n        return features;\n    }\n}\nGeoTopologyDataStore.validLevels = [\n    jsonConstants.geoConfigType.ADMIN_DIV_0,\n    jsonConstants.geoConfigType.ADMIN_DIV_1,\n    jsonConstants.geoConfigType.ADMIN_DIV_2,\n    jsonConstants.geoConfigType.ZIP_CODE,\n    jsonConstants.geoConfigType.CUSTOM_REGION\n];\nGeoTopologyDataStore.levelsWithParentCountry = [\n    jsonConstants.geoConfigType.ADMIN_DIV_1,\n    jsonConstants.geoConfigType.ADMIN_DIV_2,\n    jsonConstants.geoConfigType.ZIP_CODE\n];\nGeoTopologyDataStore.DATA_FORMAT = new ol.format.TopoJSON();\nGeoTopologyDataStore.pendingPromises = {\n    POLYGON: {},\n    POINT: {}\n};\nGeoTopologyDataStore.featuresCache = {\n    POLYGON: {},\n    POINT: {}\n};\n//# sourceMappingURL=geo-topology-data-store.js.map","/**\n * Copyright: ThoughtSpot Inc. 2017\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * USA state FIPS code to state abbr and state name map.\n */\nexport let USA_STATES = {\n    '01': ['al', 'alabama'],\n    '02': ['ak', 'alaska'],\n    '04': ['az', 'arizona'],\n    '05': ['ar', 'arkansas'],\n    '06': ['ca', 'california'],\n    '08': ['co', 'colorado'],\n    '09': ['ct', 'connecticut'],\n    '10': ['de', 'delaware'],\n    '11': ['dc', 'district of columbia'],\n    '12': ['fl', 'florida'],\n    '13': ['ga', 'georgia'],\n    '15': ['hi', 'hawaii'],\n    '16': ['id', 'idaho'],\n    '17': ['il', 'illinois'],\n    '18': ['in', 'indiana'],\n    '19': ['ia', 'iowa'],\n    '20': ['ks', 'kansas'],\n    '21': ['ky', 'kentucky'],\n    '22': ['la', 'louisiana'],\n    '23': ['me', 'maine'],\n    '24': ['md', 'maryland'],\n    '25': ['ma', 'massachusetts'],\n    '26': ['mi', 'michigan'],\n    '27': ['mn', 'minnesota'],\n    '28': ['ms', 'mississippi'],\n    '29': ['mo', 'missouri'],\n    '30': ['mt', 'montana'],\n    '31': ['ne', 'nebraska'],\n    '32': ['nv', 'nevada'],\n    '33': ['nh', 'new hampshire'],\n    '34': ['nj', 'new jersey'],\n    '35': ['nm', 'new mexico'],\n    '36': ['ny', 'new york'],\n    '37': ['nc', 'north carolina'],\n    '38': ['nd', 'north dakota'],\n    '39': ['oh', 'ohio'],\n    '40': ['ok', 'oklahoma'],\n    '41': ['or', 'oregon'],\n    '42': ['pa', 'pennsylvania'],\n    '44': ['ri', 'rhode island'],\n    '45': ['sc', 'south carolina'],\n    '46': ['sd', 'south dakota'],\n    '47': ['tn', 'tennessee'],\n    '48': ['tx', 'texas'],\n    '49': ['ut', 'utah'],\n    '50': ['vt', 'vermont'],\n    '51': ['va', 'virginia'],\n    '53': ['wa', 'washington'],\n    '54': ['wv', 'west virginia'],\n    '55': ['wi', 'wisconsin'],\n    '56': ['wy', 'wyoming']\n};\n//# sourceMappingURL=usa-states.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n */\nimport * as tslib_1 from \"tslib\";\nvar GeoEntityMatchingService_1;\nimport { jsonConstants } from '@thoughtspot/json-constants/json-constants';\nimport { Provide } from '../../../../../../../base/decorators';\nimport { DEFAULT_GEO_DATA_NORMALIZER } from '../geo-constants';\nimport GeoCountryConfig from '../geo-country-config';\nimport { GeoUtils } from '../geo-utils';\nimport GeoPropField from './geo-prop-field';\nimport GeoTopologyDataStore from './geo-topology-data-store';\nimport { USA_STATES } from './usa-states';\nlet GeoEntityMatchingService = GeoEntityMatchingService_1 = class GeoEntityMatchingService {\n    static findMatchingFeatures(values, geometryType, level, country, customFileGuid) {\n        GeoTopologyDataStore.assertValidParams(geometryType, level, country, customFileGuid);\n        let cacheKey = GeoEntityMatchingService_1.getCacheKey(level, country, customFileGuid);\n        if (!!GeoEntityMatchingService_1.geoIDToFeatureIndex[geometryType][cacheKey]) {\n            let matchedFeatures = GeoEntityMatchingService_1.matchFeaturesFromCache(values, geometryType, level, country, customFileGuid);\n            return Promise.resolve(matchedFeatures);\n        }\n        return GeoTopologyDataStore.getFeatures(geometryType, level, country, customFileGuid).then((features) => {\n            if (!GeoEntityMatchingService_1.propValueToGeoIDIndex[cacheKey]) {\n                GeoEntityMatchingService_1.propValueToGeoIDIndex[cacheKey] =\n                    GeoEntityMatchingService_1.buildPropValueToGeoIDIndex(features, level, country);\n            }\n            GeoEntityMatchingService_1.geoIDToFeatureIndex[geometryType][cacheKey] =\n                GeoEntityMatchingService_1.buildGeoIDToFeatureIndex(features);\n            return GeoEntityMatchingService_1.matchFeaturesFromCache(values, geometryType, level, country, customFileGuid);\n        });\n    }\n    static matchFeaturesFromCache(values, geometryType, level, country, customFileGuid) {\n        // matcher function will match a given token to a set (mostly 1) of geoIDs.\n        // Like it will match California to ['CA'].\n        let matcher;\n        let cacheKey = GeoEntityMatchingService_1.getCacheKey(level, country, customFileGuid);\n        if (level === jsonConstants.geoConfigType.ADMIN_DIV_2 && country === 'US') {\n            // Before 4.0 release we supported US County maps and since county names are not unique\n            // so we supported a format that you can append state name separated by comma and it\n            // will be mapped to the right state.\n            // So for US counties we support this special format. Going forward we will allow\n            // admin div 1 to come from a column to resolve the ambiguity.\n            matcher = (value) => GeoEntityMatchingService_1.findMatchingUSCounties(value, GeoEntityMatchingService_1.propValueToGeoIDIndex[cacheKey]);\n        }\n        else {\n            matcher = (value) => {\n                let normalizer = DEFAULT_GEO_DATA_NORMALIZER;\n                if (!!country) {\n                    normalizer = GeoCountryConfig.get(country).getNormalizer(level);\n                }\n                return GeoEntityMatchingService_1.propValueToGeoIDIndex[cacheKey][normalizer(value)]\n                    || [];\n            };\n        }\n        let matchedGeoIDsArray = values.map(matcher);\n        // Now that we have matched geoIDs for each geoColumnValue we can map each geoID to feature.\n        return matchedGeoIDsArray.map((geoIDs) => {\n            return geoIDs.map((geoID) => {\n                return GeoEntityMatchingService_1.geoIDToFeatureIndex[geometryType][cacheKey][geoID];\n            });\n        });\n    }\n    static getCacheKey(level, country, customFileGuid) {\n        switch (level) {\n            case jsonConstants.geoConfigType.ADMIN_DIV_0:\n                return level;\n            case jsonConstants.geoConfigType.CUSTOM_REGION:\n                return level + '-' + customFileGuid;\n            default:\n                if (!country) {\n                    throw new Error('country iso code must be present for ' + level);\n                }\n                return level + '-' + country;\n        }\n    }\n    // geoColumnValues may be comprised of multiple tokens (like county, state) concatenated by\n    // comma to avoid the redundancy in names. Like for example pike county is in many states,\n    // so we might have tokens like \"pike county, ohio\" and \"pike county, georgia\".\n    // In these cases we first find the matching features based of the first token value, i.e.\n    // \"pike county\" and then if there are multiple matches, we use the second token to resolve\n    // the ambiguity i.e. \"ohio\" and \"georgia\".\n    static findMatchingUSCounties(geoColumnValue, index) {\n        let geoColumnValueParts = geoColumnValue.split(',').map(function (s) {\n            return s.trim();\n        }).filter(function (s) {\n            return s !== '';\n        });\n        let firstPart = GeoCountryConfig.get('US').getDiv2Normalizer()(geoColumnValueParts[0] || ''), secondPart = GeoCountryConfig.get('US').getDiv1Normalizer()(geoColumnValueParts[1] || '');\n        if (!firstPart || !index[firstPart]) {\n            return [];\n        }\n        let countyIDs = index[firstPart];\n        if (countyIDs.length === 1) {\n            return countyIDs;\n        }\n        if (!secondPart) {\n            // We don't have second token part to resolve ambiguity.\n            return countyIDs;\n        }\n        let matchedCountyID = countyIDs.find((countyID) => {\n            let stateFIPS = countyID.slice(0, 2);\n            return secondPart === stateFIPS ||\n                USA_STATES[stateFIPS].indexOf(secondPart) !== -1;\n        });\n        return (matchedCountyID && [matchedCountyID]) || [];\n    }\n    static buildPropValueToGeoIDIndex(features, level, country) {\n        let index = {};\n        let fields = GeoUtils.getPropKeysForMatching(level, country);\n        features.forEach((feature) => {\n            let props = feature.getProperties(), propValuesSet = {};\n            fields.forEach((propField) => {\n                let propValue = props[propField.toString()];\n                if (!propValue) {\n                    return;\n                }\n                propValue = (propValue + '').toLowerCase();\n                if (!!propValuesSet[propValue]) {\n                    // If subsequent paths produces the same propValue, we can ignore\n                    // them.\n                    return;\n                }\n                if (!index[propValue]) {\n                    index[propValue] = [];\n                }\n                // We use array here because same prop value might be present in multiple geo\n                // entities, for example, US county names are not unique.\n                index[propValue].push(props[GeoPropField.GEOID.toString()]);\n                propValuesSet[propValue] = 1;\n            });\n        });\n        return index;\n    }\n    static buildGeoIDToFeatureIndex(features) {\n        let ret = {};\n        features.forEach((feature) => {\n            let featureUniqueId = feature.getProperties()[GeoPropField.GEOID.toString()];\n            ret[featureUniqueId] = feature;\n        });\n        return ret;\n    }\n};\nGeoEntityMatchingService.propValueToGeoIDIndex = {};\nGeoEntityMatchingService.geoIDToFeatureIndex = {\n    POLYGON: {},\n    POINT: {}\n};\nGeoEntityMatchingService = GeoEntityMatchingService_1 = tslib_1.__decorate([\n    Provide('GeoEntityMatchingService')\n], GeoEntityMatchingService);\nexport default GeoEntityMatchingService;\n//# sourceMappingURL=geo-entity-matching-service.js.map","/**\n * Copyright: ThoughtSpot Inc. 2017\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview Class for geo viz data processing\n */\nimport * as tslib_1 from \"tslib\";\nvar GeoDataProcessor_1;\nimport { jsonConstants } from '@thoughtspot/json-constants/json-constants';\nimport { create } from '@thoughtspot/logger';\nimport _ from 'lodash';\nimport { ngRequire, Provide } from '../../../../../../base/decorators';\nimport { GeoUtils } from './geo-utils';\nimport { chartTypes } from '../../chart-type-specification-service';\nimport { GeoBounds } from './geo-bounds';\nimport { GEO_AREA_OPACITY } from './geo-constants';\nimport GeoEntityMatchingService from './metadata-services/geo-entity-matching-service';\nimport GeoPropField from './metadata-services/geo-prop-field';\nconst $q = ngRequire('$q');\nconst util = ngRequire('util');\nlet logger;\nlet GeoDataProcessor = GeoDataProcessor_1 = class GeoDataProcessor {\n    constructor(chartModel) {\n        this.chartModel = chartModel;\n        this.reset();\n    }\n    static getFeatureIdForDataValue(seriesIndexToDimensionValueToFeatureId, dataValue, seriesIndex, dataValueFormatter) {\n        if (!_.has(seriesIndexToDimensionValueToFeatureId, seriesIndex)) {\n            seriesIndexToDimensionValueToFeatureId[seriesIndex] = {};\n        }\n        let dimensionValueToFeatureId = seriesIndexToDimensionValueToFeatureId[seriesIndex];\n        if (!_.has(dimensionValueToFeatureId, dataValue)) {\n            let featureId = dataValueFormatter(dataValue, seriesIndex).value;\n            featureId = (featureId + '').toLowerCase();\n            dimensionValueToFeatureId[dataValue] = featureId;\n        }\n        return dimensionValueToFeatureId[dataValue];\n    }\n    static getGeoConfigTypeToBoundsExpansionAmount() {\n        if (GeoDataProcessor_1.geoConfigTypeToBoundsExpansionAmount === void 0) {\n            GeoDataProcessor_1.geoConfigTypeToBoundsExpansionAmount = util.mapArrayToHash([\n                [jsonConstants.geoConfigType.POINT, 1],\n                [jsonConstants.geoConfigType.ZIP_CODE, 2],\n                [jsonConstants.geoConfigType.ADMIN_DIV_2, 4],\n                [jsonConstants.geoConfigType.ADMIN_DIV_1, 6]\n            ], (geoConfigTypeAndExpansionAmount) => {\n                return geoConfigTypeAndExpansionAmount[0];\n            }, (geoConfigTypeAndExpansionAmount) => {\n                return geoConfigTypeAndExpansionAmount[1];\n            });\n        }\n        return GeoDataProcessor_1.geoConfigTypeToBoundsExpansionAmount;\n    }\n    setData(data) {\n        this.data = data;\n        this.processData();\n    }\n    hasData() {\n        return !!this.data;\n    }\n    getGeoConfig() {\n        return this.data.geoConfig;\n    }\n    isGeoConfigOfType(geoConfigType) {\n        return this.getGeoConfig().getType() === geoConfigType;\n    }\n    getBounds() {\n        if (this.geoBounds !== void 0) {\n            return $q.when(this.geoBounds);\n        }\n        if (this.data.geoConfig.getType() === jsonConstants.geoConfigType.ADMIN_DIV_1) {\n            this.geoBounds = GeoBounds.prototype.fromBounds.apply(null, GeoUtils.constants.GEOBOUNDS.CONTINENTAL_US);\n        }\n        else if (!GeoDataProcessor_1.COMPUTABLE_BOUNDS_GEO_CONFIG_TYPES.includes(this.data.geoConfig.getType())) {\n            this.geoBounds =\n                GeoBounds.prototype.fromBounds.apply(null, GeoUtils.constants.GEOBOUNDS.WORLD);\n        }\n        if (!!this.geoBounds) {\n            return $q.when(this.geoBounds);\n        }\n        let geoConfig = this.data.geoConfig;\n        let centroidsPromise = GeoEntityMatchingService.findMatchingFeatures(this.allFeatureIdsOfSeries, 'POINT', geoConfig.getType(), geoConfig.getParent() && geoConfig.getParent().getFixedValue(), geoConfig.getCustomFileGuid()).then((featuresList) => {\n            return featuresList.map((features) => {\n                if (features.length === 1) {\n                    return features[0];\n                }\n                return null;\n            });\n        });\n        let allowCrossingDataLine = GeoUtils.isProjectionGlobe(this.chartModel.getChartType());\n        return centroidsPromise.then((pointFeatures) => {\n            this.geoBounds = new GeoBounds();\n            pointFeatures.forEach((pointFeature) => {\n                let centroid = pointFeature.getGeometry().getCoordinates();\n                if (!centroid) {\n                    return;\n                }\n                this.geoBounds.extendToIncludePoint(centroid[1], centroid[0], allowCrossingDataLine);\n            });\n            // For non-point geo types we only know the centroid and not the bounds of the entire\n            // area. As a workaround for this we manually expand the bounds by a fixed amount based\n            // on the geo type to make sure that we'll always cover the entire area for all the\n            // points.\n            let geoConfigTypeToBoundsExpansionAmount = GeoDataProcessor_1.getGeoConfigTypeToBoundsExpansionAmount();\n            if (_.has(geoConfigTypeToBoundsExpansionAmount, geoConfig.getType())) {\n                let expansionAmount = geoConfigTypeToBoundsExpansionAmount[geoConfig.getType()];\n                this.geoBounds.expand(expansionAmount, expansionAmount, allowCrossingDataLine);\n            }\n            return this.geoBounds;\n        }, (error) => {\n            logger = logger || create('geo-data-processor');\n            logger.error('error in loading centroids for bounds computation');\n            return error;\n        });\n    }\n    getFormattedXValue(dataPoint) {\n        return this.data.labelFormatters.x(dataPoint.x, dataPoint.seriesIndex);\n    }\n    getFormattedYValue(dataPoint) {\n        return this.data.labelFormatters.y(dataPoint.y, dataPoint.seriesIndex);\n    }\n    getFormattedZValue(dataPoint) {\n        return this.data.labelFormatters.z(dataPoint.z, dataPoint.seriesIndex);\n    }\n    getSeriesForDataPoint(dataPoint) {\n        return this.data.series[dataPoint.seriesIndex];\n    }\n    getDataPointsForFeature(featureProps) {\n        let uniqueId = featureProps[GeoPropField.GEOID.toString()];\n        return this.uniqueFeatureIdToDataPoints[uniqueId] || [];\n    }\n    getGeoObjectsForFeature(featureId) {\n        return this.featureIdToGeoObjects[featureId] || [];\n    }\n    getAllFeatureIdsOfSeries() {\n        return this.allFeatureIdsOfSeries;\n    }\n    getAllFeatureIdsOfGeoObjects() {\n        return this.allFeatureIdsOfGeoObjects;\n    }\n    getAllSeries() {\n        return this.data && this.data.series;\n    }\n    addSeries(series) {\n        this.data.series.push(series);\n    }\n    updateSeries(series, changes) {\n        _.merge(series, changes);\n        this.processData();\n    }\n    setSeriesVisibility(serie, visible) {\n        serie.visible = !!visible;\n        this.processData();\n    }\n    buildUniqueFeatureIdToDataPointsMap(matchedFeatures) {\n        this.uniqueFeatureIdToDataPoints = {};\n        matchedFeatures.forEach((feature, index) => {\n            if (feature === null) {\n                return;\n            }\n            let uniqueFeatureId = feature.getProperties()[GeoPropField.GEOID.toString()];\n            this.uniqueFeatureIdToDataPoints[uniqueFeatureId] =\n                this.featureIdToDataPoints[this.allFeatureIdsOfSeries[index]];\n        });\n        return this.uniqueFeatureIdToDataPoints;\n    }\n    reset() {\n        this.seriesXValueToFeatureId = {};\n        this.seriesYValueToFeatureId = {};\n        this.featureIdToDataPoints = {};\n        this.featureIdToGeoObjects = {};\n        this.uniqueFeatureIdToDataPoints = null;\n        this.allFeatureIdsOfSeries = [];\n        this.allFeatureIdsOfGeoObjects = [];\n    }\n    processData() {\n        this.reset();\n        let series = this.data.series, geoObjects = this.data.geoObjects, isYGeo = this.chartModel.getChartType()\n            === chartTypes.GEO_EARTH_GRAPH, measurePropKey = isYGeo ? 'z' : 'y', featureIdSetOfSeries = {}, featureIdSetOfGeoObjects = {};\n        let addFeatureIdOfSeries = (featureId, dataPoint) => {\n            if (typeof featureId === 'string') {\n                featureId = featureId.trim();\n            }\n            if (!_.has(featureIdSetOfSeries, featureId)) {\n                featureIdSetOfSeries[featureId] = true;\n                this.allFeatureIdsOfSeries.push(featureId);\n            }\n            if (!_.has(this.featureIdToDataPoints, featureId)) {\n                this.featureIdToDataPoints[featureId] = [];\n            }\n            this.featureIdToDataPoints[featureId].push(dataPoint);\n        };\n        let addFeatureIdOfGeoObject = (featureId, geoObject) => {\n            if (!_.has(featureIdSetOfGeoObjects, featureId)) {\n                featureIdSetOfGeoObjects[featureId] = true;\n                this.allFeatureIdsOfGeoObjects.push(featureId);\n            }\n            if (!_.has(this.featureIdToGeoObjects, featureId)) {\n                this.featureIdToGeoObjects[featureId] = [];\n            }\n            this.featureIdToGeoObjects[featureId].push(geoObject);\n        };\n        let geoObjectIndex = -1;\n        geoObjects.forEach((geoObject) => {\n            geoObjectIndex++;\n            addFeatureIdOfGeoObject(geoObject.id + geoObjectIndex, geoObject);\n        });\n        let seriesDataFractions = [];\n        series.forEach((serie) => {\n            let maxMeasure = Number.NEGATIVE_INFINITY, minMeasure = Number.POSITIVE_INFINITY, maxDataPoint, minDataPoint, serieDataFractions = [];\n            serie.data.forEach((dataPoint) => {\n                if (dataPoint[measurePropKey] > maxMeasure) {\n                    maxMeasure = dataPoint[measurePropKey];\n                    maxDataPoint = dataPoint;\n                }\n                if (dataPoint[measurePropKey] < minMeasure) {\n                    minMeasure = dataPoint[measurePropKey];\n                    minDataPoint = dataPoint;\n                }\n            });\n            let measureRange = maxMeasure - minMeasure, isRangeValid = isFinite(measureRange) && measureRange !== 0;\n            if (isRangeValid) {\n                serieDataFractions = serie.data.map(function (dataPoint) {\n                    return (dataPoint[measurePropKey] - minMeasure) / measureRange;\n                });\n            }\n            seriesDataFractions.push(serieDataFractions);\n            serie.maxDataPoint = maxDataPoint;\n            serie.minDataPoint = minDataPoint;\n            serie.isRangeValid = isRangeValid;\n        });\n        GeoUtils.assignSeriesColors(this.chartModel, series);\n        let dataPointIndex = -1;\n        let isGeoArea = this.chartModel.getChartType()\n            === chartTypes.GEO_AREA, isGeoEarthArea = this.chartModel.getChartType() ===\n            chartTypes.GEO_EARTH_AREA;\n        series.forEach((serie, serieIndex) => {\n            let isRangeValid = serie.isRangeValid, serieDataFractions = seriesDataFractions[serieIndex];\n            if (_.has(serie, 'visible') && !serie.visible) {\n                return;\n            }\n            let scale = chroma.scale(serie.scale)\n                .mode('lab')\n                .correctLightness(false);\n            let bestScalingFunc;\n            if (isRangeValid) {\n                bestScalingFunc = GeoUtils.computeBestColorScalingFunction(serieDataFractions);\n            }\n            serie.data.forEach((dataPoint, index) => {\n                dataPointIndex++;\n                dataPoint.seriesIndex = serieIndex;\n                dataPoint.dataPointIndex = dataPointIndex;\n                let xFeatureId = this.getFeatureIdForXValue(dataPoint.x, serieIndex);\n                addFeatureIdOfSeries(xFeatureId, dataPoint);\n                dataPoint.featureIds = {\n                    x: xFeatureId\n                };\n                if (isYGeo) {\n                    let yFeatureId = this.getFeatureIdForYValue(dataPoint.y, serieIndex);\n                    if (yFeatureId !== xFeatureId) {\n                        addFeatureIdOfSeries(yFeatureId, dataPoint);\n                    }\n                    dataPoint.featureIds.y = yFeatureId;\n                }\n                let fraction = isRangeValid ? bestScalingFunc(serieDataFractions[index]) : 0.5;\n                dataPoint.measureRangeFraction = fraction;\n                let pointHasColor = _.has(dataPoint, 'color');\n                if (!pointHasColor) {\n                    if (isGeoArea || isGeoEarthArea) {\n                        dataPoint.mapColor =\n                            scale(fraction).alpha(GEO_AREA_OPACITY).css();\n                    }\n                    else {\n                        dataPoint.mapColor = serie.color;\n                    }\n                }\n            });\n        });\n    }\n    getFeatureIdForXValue(xValue, seriesIndex) {\n        return GeoDataProcessor_1.getFeatureIdForDataValue(this.seriesXValueToFeatureId, xValue, seriesIndex, this.data.labelFormatters.x);\n    }\n    getFeatureIdForYValue(yValue, seriesIndex) {\n        return GeoDataProcessor_1.getFeatureIdForDataValue(this.seriesYValueToFeatureId, yValue, seriesIndex, this.data.labelFormatters.y);\n    }\n};\nGeoDataProcessor.COMPUTABLE_BOUNDS_GEO_CONFIG_TYPES = [\n    jsonConstants.geoConfigType.POINT,\n    jsonConstants.geoConfigType.ZIP_CODE,\n    jsonConstants.geoConfigType.ADMIN_DIV_2\n];\nGeoDataProcessor = GeoDataProcessor_1 = tslib_1.__decorate([\n    Provide('GeoDataProcessor')\n], GeoDataProcessor);\nexport { GeoDataProcessor };\n//# sourceMappingURL=geo-data-processor.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview A subclass of ol.source.Vector that encapsulates some common\n * operations around vector geo data loading and parsing.\n */\nimport ol from '@thoughtspot/openlayers';\nexport default class BaseVectorSource extends ol.source.Vector {\n    constructor(options = {}) {\n        if (!options.features && !options.loader) {\n            throw new Error('Must provide either features or loader');\n        }\n        let config = {\n            wrapX: false\n        };\n        if (!!options.loader) {\n            config.loader = options.loader.getLoader();\n        }\n        if (!!options.features) {\n            config.features = options.features;\n        }\n        super(config);\n        if (!!options.loader) {\n            this.promise = options.loader.getPromise();\n        }\n        if (!!options.features) {\n            this.promise = Promise.resolve(options.features);\n        }\n    }\n    addFeatures(features) {\n        ol.source.Vector.prototype.addFeatures.call(this, features);\n        return features;\n    }\n    getPromise() {\n        return this.promise;\n    }\n}\n//# sourceMappingURL=base-vector-source.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview Base class for Image layers that draw vector data using ImageVector class.\n */\nimport ol from '@thoughtspot/openlayers';\nimport { getGeoMapScreenConfig } from '../../../chart-theme-screen-service';\nimport { DATA_LABEL_FILL_COLOR, DATA_LABEL_STROKE_COLOR, VIEW_PROJECTION } from '../../base/geo-constants';\nimport { GeoUtils } from '../../base/geo-utils';\nimport BaseVectorSource from '../sources/base-vector-source';\n// Note: Earlier we were using VectorLayer with VectorSource to draw boundaries.\n// But that was very slow for anything more granular than state level boundaries, because it\n// re-renders the entire map during transitions.\n// In the current approach of using ImageLayer with ImageVector source, the boundaries are not\n// re-rendered again while view is transitioning, so it is faster.\n// See http://openlayers.org/workshop/layers/imagevector.html for more details.\nclass BaseImageLayer extends ol.layer.Image {\n    /**\n     * Utility function which subclasses case use to add the data label style.\n     * @param feature\n     * @param label\n     */\n    static geTextLabelStyle(feature, label, shouldScale) {\n        let labelText;\n        const geoMapConfigForScreen = getGeoMapScreenConfig(shouldScale);\n        if (typeof label === 'function') {\n            labelText = label(feature);\n        }\n        else {\n            labelText = label;\n        }\n        if (!!labelText) {\n            return new ol.style.Style({\n                text: new ol.style.Text({\n                    font: geoMapConfigForScreen.fontSize,\n                    text: labelText,\n                    fill: new ol.style.Fill({\n                        color: DATA_LABEL_FILL_COLOR\n                    }),\n                    stroke: new ol.style.Stroke({\n                        color: DATA_LABEL_STROKE_COLOR,\n                        width: geoMapConfigForScreen.strokeWidth\n                    })\n                }),\n                geometry: GeoUtils.getInteriorPoint,\n            });\n        }\n        return null;\n    }\n    constructor(options = {}) {\n        let source = new ol.source.ImageVector({\n            source: new BaseVectorSource({\n                loader: options.loader,\n                features: options.features\n            }),\n            projection: VIEW_PROJECTION,\n            style: (feature, resolution) => this.getStylesForFeature(feature, resolution, false /* isHovered */, options.size, options.shouldScale),\n        });\n        // Note: Tyepscript compiler seems to get confused when an interface type has 'map' as the\n        // key. So we are using 'any' as the type to suppress the error.\n        let superOptions = {\n            source: source\n        };\n        super(superOptions);\n    }\n    /**\n     * Returns the source used to plot the political geo boundaries in this layer.\n     * @returns {BaseVectorSource}\n     */\n    getVectorSource() {\n        let imageVectorSource = this.getSource();\n        return imageVectorSource.getSource();\n    }\n}\nexport default BaseImageLayer;\n//# sourceMappingURL=base-image-layer.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview Class for bubble layer in a bubble type geo map.\n * Responsible for showing bubble of correct size/color in the layer\n * based on the data provided.\n */\nimport ol from '@thoughtspot/openlayers';\nimport { ADMIN_DIV_0_AND_1_MAX_BUBBLE_SIZE, BOUNDARY_THICKNESS, BUBBLE_OPACITY, DEFAULT_BUBBLE_COLOR, DEFAULT_BUBBLE_RADIUS, HOVERED_BOUNDARY_COLOR, HOVERED_BOUNDARY_THICKNESS, MIN_BUBBLE_RADIUS } from '../../base/geo-constants';\nimport { GeoUtils } from '../../base/geo-utils';\nimport BaseImageLayer from './base-image-layer';\nexport default class BubbleLayer extends BaseImageLayer {\n    constructor(options) {\n        super({\n            features: options.features,\n            loader: options.loader,\n            size: options.size\n        });\n        this.radius = options.radius;\n        this.color = options.color;\n        this.label = options.label;\n    }\n    getStylesForFeature(feature, resolution, isHovered, size, shouldScale) {\n        if (this.maxAllowedRadius === void 0 || Math.abs(resolution - this.lastResolution) > 1) {\n            let source, area, numFeatures, areaPerFeature, maxGeoRadius;\n            source = this.getVectorSource();\n            area = GeoUtils.getAreaOfExtent(source.getExtent());\n            numFeatures = source.getFeatures().length;\n            areaPerFeature = area / numFeatures;\n            maxGeoRadius = Math.sqrt(areaPerFeature / Math.PI);\n            this.maxAllowedRadius = maxGeoRadius / resolution;\n            if (numFeatures === 1) {\n                // If there is only 1 feature, then the extent will have 0 area, which will result\n                // in maxAllowedRadius set to MIN_BUBBLE_RADIUS, and then the one and only bubble\n                // on the screen will be very tiny.\n                this.maxAllowedRadius = ADMIN_DIV_0_AND_1_MAX_BUBBLE_SIZE;\n            }\n            this.maxAllowedRadius = Math.max(MIN_BUBBLE_RADIUS, this.maxAllowedRadius);\n            this.lastResolution = resolution;\n        }\n        let radius = DEFAULT_BUBBLE_RADIUS;\n        if (typeof this.radius === 'function') {\n            radius = this.radius(feature, this.maxAllowedRadius);\n        }\n        else {\n            radius = this.radius;\n        }\n        if (!radius) {\n            return [];\n        }\n        let color = DEFAULT_BUBBLE_COLOR;\n        if (typeof this.color === 'function') {\n            color = this.color(feature);\n        }\n        else {\n            color = this.color;\n        }\n        if (!color) {\n            return [];\n        }\n        // TODO (sunny): use AtlasManager to improve rendering performance when we start using\n        // webgl renderer\n        let colorArray = ol.color.asArray(color);\n        // slice() is used to create a new color array. This is to avoid corrupting the\n        // \"color strings to color arrays\" cache that the ol.color.asArray function maintains.\n        colorArray = colorArray.slice();\n        colorArray[3] = BUBBLE_OPACITY;\n        let bubble = new ol.style.Circle({\n            radius: radius,\n            fill: new ol.style.Fill({\n                color: colorArray\n            }),\n            stroke: new ol.style.Stroke({\n                color: isHovered ? HOVERED_BOUNDARY_COLOR : colorArray,\n                width: isHovered ? HOVERED_BOUNDARY_THICKNESS : BOUNDARY_THICKNESS\n            })\n        });\n        let styles = [new ol.style.Style({\n                image: bubble\n            })];\n        if (!!this.label) {\n            let labelStyle = BaseImageLayer.geTextLabelStyle(feature, this.label, shouldScale);\n            if (!!labelStyle) {\n                styles.push(labelStyle);\n            }\n        }\n        return styles;\n    }\n}\n//# sourceMappingURL=bubble-layer.js.map","/**\n * Copyright: ThoughtSpot Inc.\n * Author: Marco Alban\n *\n * @fileoverview This class defines logic of a layer that draws general geoObjects in the geo map.\n * Responsible for showing the geo objects of correct size/color in the layer\n */\nimport * as tslib_1 from \"tslib\";\nvar GeoObjectLayer_1;\nimport ol from '@thoughtspot/openlayers';\nimport { ngRequire, Provide } from '../../../../../../../base/decorators';\nimport { BOUNDARY_THICKNESS, DATA_PROJECTION, GEO_NEARBY_OBJECTS_LAYER_BOUNDARY_COLOR } from '../../base/geo-constants';\nimport BaseImageLayer from './base-image-layer';\nlet Logger = ngRequire('Logger');\nlet GeoObjectLayer = GeoObjectLayer_1 = class GeoObjectLayer extends BaseImageLayer {\n    /**\n     * @featureIds - An array of feature ids identifying the features\n     * to draw.\n     * @featureGeoObjectGetter - function that accepts a feature id and\n     * returns an array of GeoObjects mapping to that id.\n     * @metersToMapUnit - a function that accepts a coordinate and a\n     * scalar in meters and returns the desired scaling to open layer map units.\n     * @projectionCode - a codified string denoting the current view projection.\n     */\n    constructor(featureIds, featureGeoObjectGetter, metersToMapUnit, projectionCode) {\n        let logger = Logger.create('geofilter-layer');\n        let features = GeoObjectLayer_1.createFeatures(featureIds, featureGeoObjectGetter, metersToMapUnit, projectionCode, logger);\n        super({\n            features: features\n        });\n        this.logger = logger;\n    }\n    static createFeatures(featureIds, featureGeoObjectGetter, metersToMapUnit, projectionCode, logger) {\n        let features = [];\n        featureIds.forEach(featureId => {\n            let geoObjects = featureGeoObjectGetter(featureId);\n            geoObjects.forEach(function (geoObject) {\n                switch (geoObject.type) {\n                    case 'CIRCLE':\n                        let circleObject = geoObject;\n                        let center = [circleObject.longitude,\n                            circleObject.latitude];\n                        center = ol.proj.transform(center, DATA_PROJECTION, projectionCode);\n                        let radius = metersToMapUnit(center, circleObject.radius);\n                        let circle = new ol.geom.Circle(center, radius);\n                        let feature = new ol.Feature(circle);\n                        feature.setId(featureId);\n                        feature.setStyle(new ol.style.Style({\n                            stroke: new ol.style.Stroke({\n                                color: GEO_NEARBY_OBJECTS_LAYER_BOUNDARY_COLOR,\n                                width: BOUNDARY_THICKNESS\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'transparent'\n                            })\n                        }));\n                        features.push(feature);\n                        break;\n                    default:\n                        logger.warn('Unrecognized type of geoObject, skipping.');\n                }\n            });\n        });\n        return features;\n    }\n    getStylesForFeature(feature, resolution) {\n        return feature.getStyleFunction()(resolution);\n    }\n};\nGeoObjectLayer = GeoObjectLayer_1 = tslib_1.__decorate([\n    Provide('GeoObjectLayer')\n], GeoObjectLayer);\nexport default GeoObjectLayer;\n//# sourceMappingURL=geo-object-layer.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview A subclass of ol.layer.Heatmap that works with feature\n * vectors represented by their centroids.\n */\nimport ol from '@thoughtspot/openlayers';\nimport { HEATMAP_GRADIENT_COLORS } from '../../base/geo-constants';\nimport BaseVectorSource from '../sources/base-vector-source';\nexport default class HeatMapLayer extends ol.layer.Heatmap {\n    constructor(options) {\n        let weight;\n        if (typeof options.weight === 'function') {\n            weight = options.weight;\n        }\n        else {\n            weight = (feature) => {\n                return options.weight;\n            };\n        }\n        super({\n            source: new BaseVectorSource({\n                features: options.features,\n                loader: options.loader\n            }),\n            gradient: HEATMAP_GRADIENT_COLORS,\n            weight: weight\n        });\n    }\n    /**\n     * Returns the source used to plot the political geo boundaries in this layer.\n     * @returns {BaseVectorSource}\n     */\n    getVectorSource() {\n        return this.getSource();\n    }\n}\n//# sourceMappingURL=heatmap-layer.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview Class for the geo map layer for the topology shown in the map.\n */\nimport ol from '@thoughtspot/openlayers';\nimport { ngRequire } from '../../../../../../../base/decorators';\nimport { BOUNDARY_THICKNESS, DEFAULT_BOUNDARY_COLOR, DEFAULT_FILL_COLOR, HOVERED_BOUNDARY_COLOR, HOVERED_BOUNDARY_THICKNESS } from '../../base/geo-constants';\nimport BaseImageLayer from './base-image-layer';\nlet Logger = ngRequire('Logger');\nexport default class TopologyLayer extends BaseImageLayer {\n    constructor(options) {\n        super({\n            features: options.features,\n            loader: options.loader,\n            size: options.size\n        });\n        this.boundaryColor = options.boundaryColor;\n        this.fillColor = options.fillColor;\n        this.isDottedStroke = options.isDottedStroke || false;\n        this.label = options.label;\n        this.logger = Logger.create('topology-layer');\n    }\n    getStylesForFeature(feature, resolution, isHovered, size, shouldScale) {\n        let strokeColor;\n        if (isHovered) {\n            strokeColor = HOVERED_BOUNDARY_COLOR;\n        }\n        else {\n            if (!!this.boundaryColor) {\n                if (typeof this.boundaryColor === 'function') {\n                    strokeColor = this.boundaryColor(feature);\n                }\n                else {\n                    strokeColor = this.boundaryColor;\n                }\n            }\n        }\n        strokeColor = strokeColor || DEFAULT_BOUNDARY_COLOR;\n        let fillColor;\n        if (!!this.fillColor) {\n            if (typeof this.fillColor === 'function') {\n                fillColor = this.fillColor(feature);\n            }\n            else {\n                fillColor = this.fillColor;\n            }\n        }\n        fillColor = fillColor || DEFAULT_FILL_COLOR;\n        let strokeWidth = isHovered ? HOVERED_BOUNDARY_THICKNESS : BOUNDARY_THICKNESS;\n        let strokeProps = {\n            color: strokeColor,\n            width: strokeWidth\n        };\n        if (this.isDottedStroke) {\n            strokeProps.lineDash = [12, 12];\n        }\n        let styles = [\n            new ol.style.Style({\n                fill: new ol.style.Fill({\n                    color: fillColor\n                }),\n                stroke: new ol.style.Stroke(strokeProps),\n            })\n        ];\n        if (!!this.label) {\n            let labelStyle = BaseImageLayer.geTextLabelStyle(feature, this.label, shouldScale);\n            if (!!labelStyle) {\n                styles.push(labelStyle);\n            }\n        }\n        return styles;\n    }\n}\n//# sourceMappingURL=topology-layer.js.map","class ObservableFeatureLoader {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolvePromise = resolve;\n            this.rejectPromise = reject;\n        });\n        this.loader = this.createLoader();\n    }\n    onLoad(error, features) {\n        if (!!error) {\n            this.rejectPromise(error);\n        }\n        else {\n            this.resolvePromise(features);\n        }\n    }\n    getLoader() {\n        return this.loader;\n    }\n    /**\n     * Promise returned from this method will be resolved with the loaded features (or rejected\n     * with the error).\n     * @returns {*}\n     */\n    getPromise() {\n        return this.promise;\n    }\n}\n// Apparently TS has a bug that cause it to not able to support\n// \"export default abstract class Foo {...}\" in one line. So we have to export in new line.\nexport default ObservableFeatureLoader;\n//# sourceMappingURL=observable-feature-loader.js.map","/**\n * Copyright: ThoughtSpot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileoverview An PolygonFeatureLoader that loads boundary polygon features for a given admin\n * level and country. This currently supports only JSON based feature formats.\n */\nimport GeoTopologyDataStore from '../../base/metadata-services/geo-topology-data-store';\nimport ObservableFeatureLoader from './observable-feature-loader';\nexport default class PolygonFeatureLoader extends ObservableFeatureLoader {\n    constructor(options) {\n        super();\n        this.level = options.level;\n        this.country = options.country;\n        this.filter = options.filter;\n        this.customFileGuid = options.customFileGuid;\n    }\n    createLoader() {\n        let polygonLoader = this;\n        // this is the function that will be called when the map needs to load features\n        // for a particular bbox (or depending on config, the entire feature set)\n        return function (extent, resolution, projection) {\n            let source = this;\n            GeoTopologyDataStore.getFeatures('POLYGON', polygonLoader.level, polygonLoader.country, polygonLoader.customFileGuid).then((features) => {\n                if (!!polygonLoader.filter) {\n                    features = features.filter(polygonLoader.filter);\n                }\n                source.addFeatures(features);\n                polygonLoader.onLoad(null, features);\n            });\n        };\n    }\n}\n//# sourceMappingURL=polygon-feature-loader.js.map","/**\n * Copyright Thoughtspot Inc. 2016\n * Author: Mahesh Sharma (mahesh@thoughtspot.com)\n *\n * @fileOverview A class to draw map representation of geographical user data. Usage: create an\n * instance attached to a dom node as the place to draw onto. Call setType followed by setData as\n * the type or data to draw change.\n */\nimport * as tslib_1 from \"tslib\";\nvar GeoMapComponent_1;\nimport { blinkConstants } from '@thoughtspot/blink-constants/blink-constants';\nimport { jsonConstants } from '@thoughtspot/json-constants/json-constants';\nimport { create } from '@thoughtspot/logger';\nimport ol from '@thoughtspot/openlayers';\nimport { assign } from '@thoughtspot/string-util/string-util';\nimport _ from 'lodash';\nimport { Component, ngRequire } from '../../../../../../base/decorators';\nimport { flags } from '../../../../../../base/flags';\nimport ColorScaleComponent from '../../../../../../common/widgets/color-scale/color-scale';\nimport { areMapTilesEnabled } from '../../../../../callosum/service/session-service';\nimport { BaseChart } from '../../base-chart';\nimport { chartScreen } from '../../chart-theme-service';\nimport * as chartTypeSpecificationService from '../../chart-type-specification-service';\nimport { ADMIN_DIV_0_AND_1_MAX_BUBBLE_SIZE, BACKGROUND_WORLD_MAP_BOUNDARY_COLOR, BACKGROUND_WORLD_MAP_FILL_COLOR, CHOROPLETH_DIV_1_BOUNDARY_COLOR, CHOROPLETH_DIV_2_BOUNDARY_COLOR, DATA_PROJECTION, DEFAULT_MAX_BUBBLE_SIZE, HEATMAP_WEIGHT_BASE, HEATMAP_WEIGHT_FRACTION, IMAGE_TILE_SIZE, MAX_DEFAULT_ZOOM_OTHERS, MAX_DEFAULT_ZOOM_ZIP_AND_POINT, MIN_BUBBLE_RADIUS, VIEW_PROJECTION } from '../base/geo-constants';\nimport GeoDataLabelManager from '../base/geo-data-label-manager';\nimport { GeoDataProcessor } from '../base/geo-data-processor';\nimport { GeoUtils } from '../base/geo-utils';\nimport GeoEntityMatchingService from '../base/metadata-services/geo-entity-matching-service';\nimport BubbleLayer from './layers/bubble-layer';\nimport GeoObjectLayer from './layers/geo-object-layer';\nimport HeatMapLayer from './layers/heatmap-layer';\nimport TopologyLayer from './layers/topology-layer';\nimport PolygonFeatureLoader from './loaders/polygon-feature-loader';\nimport BaseVectorSource from './sources/base-vector-source';\nlet util = ngRequire('util');\nconst defaultCenter = [0, 0];\nconst defaultZoom = 2;\nconst defaultMinZoom = 2;\n// Currently in openlayers3 there is no way to restrict a map to an area. Precisely, there is no\n// way to tell openlayers3 that do not allow viewer to pan which result in viewing anything\n// outside of the given rectangle.\n// See http://gis.stackexchange.com/questions/127834/openlayers-3-restrict-map-to-an-area/\n// As of Sept 2016, the closest thing supported is that we can restrict the center of the map\n// to a given rectangle by passing 'extent' to the ol.View, which is what we are doing here too.\n// Problem with restricted center is that, if we keep the rectangle too small, then viewer\n// won't be able to zoom into features which are far from center (because then that will cause\n// center to move out of the given rectangle) an if we keep the rectangle big to allow viewer\n// to zoom into anything, then it will allow most map to go out of view in lower zoom levels.\n// which will result in ugly white/blank area to show up in the view.\n//\n// This extent is chosen such that it disallows too much map to move out from the\n// view while still allowing any polygon to be able to come to the center at all\n// zoom levels.\nlet ALLOWED_WORLD_EXTENT = [-180, -60, 180, 80];\nlet GeoMapComponent = GeoMapComponent_1 = class GeoMapComponent extends BaseChart {\n    constructor(config) {\n        super();\n        this.tooltip = {};\n        /**\n         * Set of feature Ids that are currently showing data labels on top of them.\n         * @type {Set<string>}\n         */\n        this.labeledFeatureIds = new Set();\n        /**\n         * Map of featureId to data label text for all the features that have data, not just those which\n         * we are showing data labels on.\n         * @type {Map<string, string>}\n         */\n        this.dataLabels = new Map();\n        this.logger = create('blink-geomap');\n        this.config = config;\n        this.chartModel = config.chartVizComponent.dataVizComponentConfig.vizModel;\n        this.dataProcessor = new GeoDataProcessor(this.chartModel);\n        this.layerGroup = new ol.layer.Group();\n        // NOTE: There is only one measure in geomaps we check for the column\n        // on Y-axis.\n        const yAxisColumns = this.chartModel.getYAxisColumns();\n        if (yAxisColumns.length !== 1) {\n            this.logger.error('Only one y-axis expected for geo map');\n        }\n        this.dataLabelsEnabled = !!this.chartModel.getShowDataLabels(yAxisColumns[0].getGuid());\n        this.disableTransformations =\n            config.chartVizComponent.dataVizComponentConfig.disableTransformations;\n    }\n    static getLayerLoadPromise(layer) {\n        // If a layer is not visible, then we don't need to wait for anything.\n        if (!layer.getVisible()) {\n            return Promise.resolve();\n        }\n        // If the layer is our custom layer then have an ability to track load state better\n        // and we use that.\n        if (GeoMapComponent_1.isIGeoVectorLayer(layer)) {\n            return layer.getVectorSource().getPromise();\n        }\n        // Openlayers enum only work in dev mode.\n        // (See https://github.com/openlayers/ol3/issues/3671). So we can't\n        // use library defined ol.source.State enums.\n        if (layer.getSource().getState() === GeoUtils.olSourceState.READY) {\n            return Promise.resolve();\n        }\n        // Note (sunny): I don't know of a way in the API to check\n        // whether a layer has already been composed but if we\n        // know that source is not yet ready the layer is not yet\n        // composed so we use this invariant to water for the more\n        // desirable state in the life of layer\n        return new Promise((resolve, reject) => {\n            layer.once('postcompose', () => {\n                resolve();\n            });\n        });\n    }\n    /**\n     * User defined type guard\n     * @see type guards https://www.typescriptlang.org/docs/handbook/advanced-types.html\n     * @param layer\n     * @returns {boolean}\n     */\n    static isIGeoVectorLayer(layer) {\n        return !!layer && layer.getVectorSource !== void 0;\n    }\n    static shouldDrawFeatureBoundaries(geoConfig, chartType) {\n        // For zip code and county level maps, do not show boundaries while showing bubbles or heat\n        // map.\n        if ((geoConfig.getType() === jsonConstants.geoConfigType.ZIP_CODE ||\n            geoConfig.getType() === jsonConstants.geoConfigType.ADMIN_DIV_2 ||\n            geoConfig.getType() === jsonConstants.geoConfigType.POINT) &&\n            (chartType === chartTypeSpecificationService.chartTypes.GEO_BUBBLE ||\n                chartType === chartTypeSpecificationService.chartTypes.GEO_HEATMAP)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Create a function to translate meters to map units.\n     * @param viewResolution is the view resolution of the current view.\n     * @param viewProjection is the projection of the current view.\n     * @returns a function that accepts a @coordinate (a latitude and\n     * longitude pair) and a distance in @meters and translates meters to\n     * map units.\n     */\n    static metersToMapUnitFactory(viewResolution, viewProjection) {\n        return function (coordinate, meters) {\n            let pointResolution = viewProjection.getPointResolution(viewResolution, coordinate);\n            return (meters / ol.proj.METERS_PER_UNIT['m']) *\n                (viewResolution / pointResolution);\n        };\n    }\n    static getMaxBubbleRadiusForGeoConfig(geoConfig) {\n        switch (geoConfig.getType()) {\n            case jsonConstants.geoConfigType.ADMIN_DIV_0:\n            case jsonConstants.geoConfigType.ADMIN_DIV_1:\n                return ADMIN_DIV_0_AND_1_MAX_BUBBLE_SIZE;\n            default:\n                return DEFAULT_MAX_BUBBLE_SIZE;\n        }\n    }\n    postLink(element) {\n        // EPSG 4326 is a Geographic coordinate system with the wgs84 datum, our datas\n        // are stored in this particular coordinate system\n        // EPSG 3857 is a projected coordinate system that is based on the wgs84 datum, we are\n        // using this projection to map spherical coordinate to cartesian coordinate\n        // A common confusion is to treat EPSG/4326 as plate carree, which is NOT true\n        // Unit in plate carre are meter, but are degree in 4326. Of course, you can treat EPSG:4326\n        // as a plate carre projection of [[-180, -90] [180, 90]], but libraries are doing\n        // spherical calculations on those numbers, so it's not correct to treat this projection as\n        // a cartesian coordinate reference system\n        // Fortunately openlayer has native support for converting coordinates b/w these two\n        // projections. ol.proj.transform(coordinates, fromProjection, toProjection)\n        // Whenever we set coordinates data into an ol.Feature object, we must ensure to convert\n        // into view projection, and whenever we read coordinates from ol.Feature object and try\n        // to use in some business logic, we should convert from view projection to data projection\n        let restrictCenterExtent = ol.proj.transformExtent(ALLOWED_WORLD_EXTENT, DATA_PROJECTION, VIEW_PROJECTION);\n        let view = new ol.View({\n            center: defaultCenter,\n            zoom: defaultZoom,\n            minZoom: defaultMinZoom,\n            projection: VIEW_PROJECTION,\n            extent: restrictCenterExtent\n        });\n        this.container = element.find('.bk-geomap-ol-container');\n        this.map = new ol.Map({\n            layers: [this.layerGroup],\n            renderer: 'canvas',\n            target: this.container[0],\n            view: view,\n            controls: [\n                // collapsible:false is required by OSM\n                new ol.control.Attribution({ collapsible: false }),\n                new ol.control.Zoom({ duration: 500 })\n            ],\n            interactions: ol.interaction.defaults({\n                mouseWheelZoom: true,\n            })\n        });\n        this.setUpEventHandlers();\n    }\n    setData(data) {\n        this.dataProcessor.setData(data);\n        return this.redraw();\n    }\n    setSize() {\n        if (!this.map || this.layerGroup.getLayers().getLength() === 0) {\n            return;\n        }\n        this.map.updateSize();\n        this.updateViewport();\n    }\n    supportsDownload() {\n        return true;\n    }\n    getSeries() {\n        return this.dataProcessor.getAllSeries();\n    }\n    getPlotSizeX() {\n        return this.container.width();\n    }\n    getPlotSizeY() {\n        return this.container.height();\n    }\n    destroy() {\n        this.tooltip = {};\n        if (this.map) {\n            this.map.un('pointermove', this.onPointerMove);\n            this.map.un('moveend', this.onMoveEnd);\n            $(this.map.getTarget()).off('mouseleave.blink-geo-maps');\n            $(this.map.getTarget()).off('contextmenu.blink-geo-maps');\n            this.map.setTarget(null);\n            this.labeledFeatureIds.clear();\n            this.dataLabels.clear();\n            this.features = void 0;\n            this.map = null;\n        }\n    }\n    addSeries(series, doRedraw) {\n        this.dataProcessor.addSeries(series);\n        if (doRedraw) {\n            this.redraw();\n        }\n    }\n    updateSerieColor(serieName, color) {\n        const series = this.chartModel.getSerie(serieName);\n        series.scale = GeoUtils.getScaleFromColor(color);\n        series.color = color;\n        this.dataProcessor.updateSeries(series, {});\n        this.redraw();\n    }\n    updateSeries(serieName, changes) {\n        let serie = this.chartModel.getSerie(serieName);\n        this.dataProcessor.updateSeries(serie, changes);\n        this.redraw();\n    }\n    setSeriesVisibility(serie, visible, doRedraw) {\n        this.dataProcessor.setSeriesVisibility(serie, visible);\n        if (doRedraw) {\n            this.redraw();\n        }\n    }\n    toBlob(options, callback) {\n        if (!this.map) {\n            callback(null);\n            return;\n        }\n        this.map.once('postcompose', function (event) {\n            let canvas = event.context.canvas;\n            let newCanvas = document.createElement('canvas');\n            newCanvas.width = canvas.width;\n            newCanvas.height = canvas.height;\n            let newContext = newCanvas.getContext('2d');\n            newContext.fillStyle = (options.chart && options.chart.backgroundColor) || '#ffffff';\n            newContext.rect(0, 0, canvas.width, canvas.height);\n            newContext.fill();\n            newContext.drawImage(canvas, 0, 0);\n            newCanvas.toBlob((blob) => {\n                callback(blob);\n            });\n        });\n        this.map.renderSync();\n    }\n    isDataLabelsEnabled() {\n        return this.dataLabelsEnabled;\n    }\n    setDataLabelVisibility(visible) {\n        if (visible !== this.dataLabelsEnabled) {\n            this.dataLabelsEnabled = visible;\n            this.updateDataLabels(visible);\n        }\n    }\n    supportsFullScreenMode() {\n        return false;\n    }\n    redraw() {\n        return this.getTopologyData()\n            .then((features) => {\n            this.dataLabels.clear();\n            return this.redrawFeatures();\n        }).then(() => {\n            this.updateColorScale();\n            this.forceRender();\n        });\n    }\n    setUpEventHandlers() {\n        this.onPointerMove = util.debounce((event) => {\n            if (event.dragging) {\n                return;\n            }\n            this.onMouseMove(event);\n        }, 125);\n        this.map.on('pointermove', this.onPointerMove);\n        $(this.map.getTarget()).on('mouseleave.blink-geo-maps', util.debounce((event) => {\n            this.tooltip.shown = false;\n        }, 250));\n        $(this.map.getTarget()).on('contextmenu.blink-geo-maps', (event) => {\n            event.preventDefault();\n            this.onMouseRightClick(event);\n        });\n        if (!this.config.chartVizComponent.dataVizComponentConfig.disableHighlightOnHover) {\n            this.map.addInteraction(new ol.interaction.Select({\n                condition: ol.events.condition.pointerMove,\n                style: (feature, resolution) => {\n                    // Note (sunny): the freq. of calls to this function are limited by\n                    // how fast the user can select a point in the chart hence it is\n                    // okay to look for the top most layer each time instead of saving\n                    // a reference to it somewhere\n                    let topLayer = this.getTopLayer();\n                    return topLayer.getStylesForFeature(feature, resolution, true /* isHovered */, this.map.getSize(), this.config.chartVizComponent.scaledFonts());\n                },\n                wrapX: false,\n                layers: (layer) => {\n                    // SCAL-8898: we don't need to highlight heatmap points on hover. Given the\n                    // clustering it's not useful.\n                    if (layer instanceof HeatMapLayer) {\n                        return false;\n                    }\n                    return this.isUnmanagedOrTopLayer(layer);\n                }\n            }));\n        }\n        this.previousZoom = this.map.getView().getZoom();\n        // Saving the function reference in an instance variable so that we can remove the\n        // listener in the destroy() function.\n        this.onMoveEnd = () => {\n            this.updateDataLabels(this.dataLabelsEnabled);\n            this.updateZoomClientState();\n        };\n        this.map.on('moveend', this.onMoveEnd);\n    }\n    updateZoomClientState() {\n        let zoomLevel = this.map.getView().getZoom();\n        let center = this.map.getView().getCenter();\n        // this is the default state, in that case, we do not update the client state\n        // and we let the component decides which is the best viewport\n        if (zoomLevel === defaultZoom\n            && center[0] === defaultCenter[0]\n            && center[1] === defaultCenter[1]) {\n            return;\n        }\n        this.chartModel.setMapViewport({\n            zoomLevel,\n            center\n        });\n    }\n    updateDataLabels(showDataLabels) {\n        if (!this.features || this.features.length === 0) {\n            // Features haven't been fetched yet.\n            return;\n        }\n        let newLabeledFeatures = new Set();\n        if (showDataLabels) {\n            let is_zoom_event = false;\n            if (this.previousZoom !== this.map.getView().getZoom()) {\n                this.previousZoom = this.map.getView().getZoom();\n                is_zoom_event = true;\n            }\n            if (this.dataLabels.size === 0) {\n                this.buildDataLabelsMap(this.features);\n            }\n            let $target = $(this.map.getTarget());\n            newLabeledFeatures = GeoDataLabelManager.chooseFeaturesForLabeling({\n                features: this.features,\n                width: $target.width(),\n                height: $target.height(),\n                coordinateFunc: feature => this.map.getPixelFromCoordinate(GeoUtils.getInteriorPoint(feature).getCoordinates()),\n                labels: this.dataLabels,\n                prioritize_existing: !is_zoom_event,\n                existing_labeled_features: this.labeledFeatureIds,\n            });\n        }\n        if (this.labeledFeatureIds.size > 0 || newLabeledFeatures.size > 0) {\n            // Check for each feature whether we are changing the visibility of data label on it.\n            // We need to re-render a feature only if we didn't show data label on it previously\n            // but decided to show it in this pass, or vice versa.\n            this.features.forEach((feature) => {\n                let fid = feature.getId();\n                if (this.labeledFeatureIds.has(fid) && !newLabeledFeatures.has(fid) ||\n                    !this.labeledFeatureIds.has(fid) && newLabeledFeatures.has(fid)) {\n                    feature.changed();\n                }\n            });\n            this.labeledFeatureIds = newLabeledFeatures;\n        }\n    }\n    getDataPointsForMouseEvent(event) {\n        let features = this.getFeaturesForMouseEvent(event), \n        // TODO (sunny): handle multiple features\n        selectedFeature = features[0];\n        return this.getFeatureDataPoints(selectedFeature);\n    }\n    getFeaturesForMouseEvent(event) {\n        if (!this.map) {\n            return [];\n        }\n        let offset = util.getMouseEventOffset(event.originalEvent), mouseCoordinatesInMapPixels = [offset.x, offset.y];\n        let features = [];\n        // Note(mahesh): typings or forEachFeatureAtPixel function is incorrect, typings for this\n        // function is according to how it is in 3.20 version of openlayers, even though we are\n        // using typings of 3.18 version. That's why we need to untype this.map here before calling\n        // forEachFeatureAtPixel function.\n        // When we upgrade openlayers and typings again to the latest version then this problem will\n        // disappear.\n        let map = this.map;\n        map.forEachFeatureAtPixel(mouseCoordinatesInMapPixels, (feature, layer) => {\n            features.push(feature);\n        }, null, (layer) => {\n            return this.isUnmanagedOrTopLayer(layer);\n        });\n        return features;\n    }\n    getFeatureDataPoints(feature) {\n        if (!feature || !this.dataProcessor || !this.dataProcessor.hasData()) {\n            return [];\n        }\n        return this.dataProcessor.getDataPointsForFeature(feature.getProperties());\n    }\n    getFillColorForFeature(feature) {\n        if (this.chartModel.getChartType() !== chartTypeSpecificationService.chartTypes.GEO_AREA) {\n            return null;\n        }\n        let dataPointsForFeature = this.getFeatureDataPoints(feature);\n        if (!dataPointsForFeature || !dataPointsForFeature.length) {\n            this.logger.everyN('warn', 20, 'no data point found for feature', feature);\n            return null;\n        }\n        let dataPoint = dataPointsForFeature[0];\n        return chroma(dataPoint.mapColor).css();\n    }\n    getDataLabelForFeature(feature) {\n        if (this.chartModel.getChartType() ===\n            chartTypeSpecificationService.chartTypes.GEO_HEATMAP) {\n            return null;\n        }\n        if (!this.labeledFeatureIds.has(feature.getId())) {\n            return null;\n        }\n        let dataPoints = this.getFeatureDataPoints(feature);\n        if (!dataPoints || dataPoints.length === 0) {\n            return null;\n        }\n        return this.getLabelForDataPoint(dataPoints[0]);\n    }\n    getLabelForDataPoint(dataPoint) {\n        let xNameValuePair = this.dataProcessor.getFormattedXValue(dataPoint), yNameValuePair = this.dataProcessor.getFormattedYValue(dataPoint);\n        return xNameValuePair.value + '\\n'\n            + yNameValuePair.value;\n    }\n    getBubbleRadiusForFeature(feature, maxBubbleRadius) {\n        let dataPoints = this.dataProcessor.getDataPointsForFeature(feature.getProperties());\n        if (!dataPoints || dataPoints.length === 0) {\n            return 0;\n        }\n        let dataPoint = dataPoints[0], measureRangeFraction = dataPoint.hasOwnProperty('measureRangeFraction')\n            ? dataPoint.measureRangeFraction : 1.0;\n        return MIN_BUBBLE_RADIUS +\n            (maxBubbleRadius - MIN_BUBBLE_RADIUS) *\n                Math.sqrt(measureRangeFraction);\n    }\n    getBubbleColorForFeature(feature) {\n        let dataPoints = this.dataProcessor.getDataPointsForFeature(feature.getProperties());\n        if (!dataPoints || dataPoints.length === 0) {\n            return null;\n        }\n        return dataPoints[0].mapColor;\n    }\n    onMouseMove(event) {\n        let featureDataPoints = this.getDataPointsForMouseEvent(event);\n        if (featureDataPoints.length === 0) {\n            this.tooltip.shown = false;\n            this.forceRender();\n            return;\n        }\n        // TODO (sunny): handle multiple data points for a feature\n        let tooltipContent = {}, featureDataPoint = featureDataPoints[0], xNameValuePair = this.dataProcessor.getFormattedXValue(featureDataPoint), yNameValuePair = this.dataProcessor.getFormattedYValue(featureDataPoint);\n        tooltipContent[xNameValuePair.name] = xNameValuePair.value;\n        tooltipContent[yNameValuePair.name] = yNameValuePair.value;\n        this.tooltip.content = tooltipContent;\n        this.tooltip.shown = true;\n        this.tooltip.left = event.originalEvent.clientX;\n        this.tooltip.top = event.originalEvent.clientY;\n        this.forceRender();\n    }\n    onMouseRightClick(event) {\n        if (this.disableTransformations) {\n            return;\n        }\n        let featureDataPoints = this.getDataPointsForMouseEvent(event);\n        if (featureDataPoints.length === 0) {\n            return;\n        }\n        if (this.config.onRightClick) {\n            let offset = util.getMouseEventOffset(event.originalEvent), dataPoint = angular.copy(featureDataPoints[0]);\n            dataPoint.series = this.dataProcessor.getSeriesForDataPoint(dataPoint);\n            let clickData = {\n                chartX: offset.x,\n                chartY: offset.y,\n                point: dataPoint\n            };\n            this.config.onRightClick(clickData, dataPoint.series.color, dataPoint.series.name);\n        }\n    }\n    getTopLayer() {\n        return this.getLayerAtIndex(-1);\n    }\n    getLayerAtIndex(index) {\n        let layers = this.layerGroup.getLayers().getArray();\n        if (index < 0) {\n            index = layers.length + index;\n        }\n        return layers[index];\n    }\n    getExtentOfDataLayer() {\n        let dataLayer = this.getTopLayer();\n        if (GeoMapComponent_1.isIGeoVectorLayer(dataLayer)) {\n            let dummySource = new BaseVectorSource({\n                features: this.features\n            });\n            return dummySource.getExtent();\n        }\n        throw new Error('Invalid top layer');\n    }\n    fitMapToData() {\n        if (this.features.length === 0) {\n            return;\n        }\n        let extent = this.getExtentOfDataLayer();\n        let geoConfigType = this.dataProcessor.getGeoConfig().getType();\n        let maxZoom = MAX_DEFAULT_ZOOM_OTHERS;\n        if (geoConfigType === jsonConstants.geoConfigType.POINT ||\n            geoConfigType === jsonConstants.geoConfigType.ZIP_CODE) {\n            maxZoom = MAX_DEFAULT_ZOOM_ZIP_AND_POINT;\n        }\n        this.map.getView().fit(extent, this.map.getSize());\n        let newZoom = this.map.getView().getZoom();\n        if (newZoom > maxZoom) {\n            this.map.getView().setZoom(maxZoom);\n        }\n    }\n    shouldDrawFeature(hasTileLayer, feature) {\n        // For more granular geo levels, to improve performance and clarity we only draw\n        // features that have data for, even when we don't have background tiles.\n        let geoCofig = this.dataProcessor.getGeoConfig();\n        if (hasTileLayer || GeoUtils.isGeoConfigWithPartialDrawing(geoCofig)) {\n            return this.getFeatureDataPoints(feature).length > 0;\n        }\n        return true;\n    }\n    getAllLayersLoadedPromise() {\n        let layers = this.layerGroup.getLayers().getArray();\n        let layerLoadPromises = layers.map((layer) => {\n            return GeoMapComponent_1.getLayerLoadPromise(layer);\n        });\n        return Promise.all(layerLoadPromises);\n    }\n    getTileLayer() {\n        let geoTileSourceId = flags.getValue(flags.BLINK_FLAGS.geoTileSourceId.name);\n        if (!geoTileSourceId && areMapTilesEnabled()) {\n            geoTileSourceId = blinkConstants.geoTypeSourceIds.THOUGHTSPOT_LOCAL;\n        }\n        if (!geoTileSourceId) {\n            return null;\n        }\n        let url = null;\n        let crossOrigin = void 0;\n        let maxZoom = 0;\n        let attribution = null;\n        switch (geoTileSourceId) {\n            case blinkConstants.geoTypeSourceIds.THOUGHTSPOT_LOCAL:\n                url = blinkConstants.geoTileUrls.THOUGHTSPOT_LOCAL;\n                maxZoom = blinkConstants.geoTileMaxZoom.THOUGHTSPOT_LOCAL;\n                attribution = ol.source.OSM.ATTRIBUTION;\n                break;\n            case blinkConstants.geoTypeSourceIds.MAPBOX:\n                let tileType = flags.getValue(flags.BLINK_FLAGS.geoTileType.name);\n                if (!tileType) {\n                    tileType = blinkConstants.geoTileTypes.MAPBOX.LIGHT;\n                }\n                url = assign(blinkConstants.geoTileUrls.MAPBOX, {\n                    tileType: tileType\n                });\n                maxZoom = blinkConstants.geoTileMaxZoom.MAPBOX;\n                crossOrigin = 'anonymous';\n                break;\n            default:\n                this.logger.warn('Unhandled map tile source', geoTileSourceId);\n        }\n        if (!url) {\n            return null;\n        }\n        let sourceConfig = {\n            tileSize: [IMAGE_TILE_SIZE, IMAGE_TILE_SIZE],\n            url: url,\n            maxZoom: maxZoom\n        };\n        if (!!crossOrigin) {\n            // We need to set the crossOrigin if tiles are being downloaded from some other\n            // domain, otherwise download map functionality will not work.\n            sourceConfig.crossOrigin = crossOrigin;\n        }\n        if (!!attribution) {\n            sourceConfig.attributions = [attribution];\n        }\n        let tileOptions = {\n            source: new ol.source.XYZ(sourceConfig)\n        };\n        return new ol.layer.Tile(tileOptions);\n    }\n    /**\n     * Returns whether the given layer is the top layer or an unmanaged layer.\n     * An unmanaged layer is something that openlayers' Select interaction maintains\n     * internally and and is not added to the geoMap.layerGroup.getLayers().\n     * Whenever a feature is selected, openlayer removes it from the main layer and add it to this\n     * internal unmanaged layer.\n     * While looking for a feature to highlight of select, we only need to consider the top layer\n     * and this unmanaged layer, that's where this utility function comes in the picture.\n     * @param layer\n     * @returns {boolean}\n     */\n    isUnmanagedOrTopLayer(layer) {\n        let layers = this.layerGroup.getLayers().getArray(), layerPosition = layers.indexOf(layer);\n        return layerPosition === -1 || layerPosition === layers.length - 1;\n    }\n    getTopologyData() {\n        let geoColumnValues = this.dataProcessor.getAllFeatureIdsOfSeries(), geoConfig = this.dataProcessor.getGeoConfig();\n        if (geoConfig.getType() === jsonConstants.geoConfigType.POINT) {\n            // For lat, long points we will simply build Point feature for each lat, long pair.\n            // There will be no caching involved because number of possible set of points is\n            // infinite.\n            return this.getTopologyDataForPointsGeoType(geoColumnValues);\n        }\n        let geomType = 'POINT';\n        if (this.chartModel.getChartType() === chartTypeSpecificationService.chartTypes.GEO_AREA) {\n            geomType = 'POLYGON';\n        }\n        return GeoEntityMatchingService.findMatchingFeatures(geoColumnValues, geomType, geoConfig.getType(), geoConfig.getParent() && geoConfig.getParent().getFixedValue(), geoConfig.getCustomFileGuid()).then((matchedFeatures) => {\n            let features = matchedFeatures.map((features, index) => {\n                if (features.length === 1) {\n                    return features[0];\n                }\n                this.logger.warn(`could not find unique matching entity for ${geoColumnValues[index]}\n                         found ${features.length} matching entities`);\n                return null;\n            });\n            this.dataProcessor.buildUniqueFeatureIdToDataPointsMap(features);\n            return this.features = features.filter((feature) => !!feature);\n        });\n    }\n    getTopologyDataForPointsGeoType(latLongPairs) {\n        let features = latLongPairs.map((latLongPair) => {\n            let props = {\n                GEOID: latLongPair\n            };\n            let latLong = latLongPair.split(', ');\n            let coords = [+latLong[1], +latLong[0]];\n            if (isNaN(coords[0]) || isNaN(coords[1])) {\n                this.logger.warn('Invalid geo coordinate', latLongPair);\n                return null;\n            }\n            // Convert to view projection. See note at the top of GeoMapComponent class about\n            // projections.\n            coords = ol.proj.transform(coords, DATA_PROJECTION, VIEW_PROJECTION);\n            props.geometry = new ol.geom.Point(coords);\n            let feature = new ol.Feature(props);\n            feature.setId(props.GEOID);\n            return feature;\n        });\n        this.dataProcessor.buildUniqueFeatureIdToDataPointsMap(features);\n        return Promise.resolve(this.features = features.filter((feature => !!feature)));\n    }\n    buildDataLabelsMap(features) {\n        features.forEach((feature) => {\n            let dataPoint = this.getFeatureDataPoints(feature)[0];\n            if (!dataPoint) {\n                throw new Error('data point must be present for feature');\n            }\n            this.dataLabels.set('' + feature.getId(), this.getLabelForDataPoint(dataPoint));\n        });\n        return features;\n    }\n    redrawFeatures() {\n        if (!!this.layerGroup) {\n            this.layerGroup.getLayers().clear();\n        }\n        let tileLayer = this.getTileLayer(), layers = [];\n        if (!!tileLayer) {\n            layers.push(tileLayer);\n        }\n        let backgroundWorldMapLayer = new TopologyLayer({\n            loader: new PolygonFeatureLoader({\n                level: jsonConstants.geoConfigType.ADMIN_DIV_0,\n            }),\n            boundaryColor: BACKGROUND_WORLD_MAP_BOUNDARY_COLOR,\n            fillColor: BACKGROUND_WORLD_MAP_FILL_COLOR,\n            size: this.map ? this.map.getSize() : []\n        });\n        layers.push(backgroundWorldMapLayer);\n        // IDs of features that we have data for.\n        let geoConfig = this.dataProcessor.getGeoConfig(), chartType = this.chartModel.getChartType();\n        // As for zip and county level, we will only be drawing those boundaries which we have data\n        // for, so we will add a layer to draw US state level boundaries so that the map still looks\n        // complete and connected.\n        let stateBoundariesLayer = null;\n        if (GeoUtils.isGeoConfigWithPartialDrawing(geoConfig)) {\n            stateBoundariesLayer = new TopologyLayer({\n                loader: new PolygonFeatureLoader({\n                    level: jsonConstants.geoConfigType.ADMIN_DIV_1,\n                    country: geoConfig.getParent().getFixedValue(),\n                }),\n                boundaryColor: CHOROPLETH_DIV_1_BOUNDARY_COLOR,\n                isDottedStroke: true,\n                size: this.map ? this.map.getSize() : []\n            });\n            layers.push(stateBoundariesLayer);\n        }\n        // Background world boundaries and state boundaries should remain hidden if map tiles are\n        // enabled, unless the loading of tiles fails, then they should show up.\n        if (tileLayer) {\n            backgroundWorldMapLayer.setVisible(false);\n            if (!!stateBoundariesLayer) {\n                stateBoundariesLayer.setVisible(false);\n            }\n            tileLayer.getSource().once('tileloaderror', (event) => {\n                backgroundWorldMapLayer.setVisible(true);\n                if (!!stateBoundariesLayer) {\n                    stateBoundariesLayer.setVisible(true);\n                }\n            });\n        }\n        let featureIdsOfGeoObjects = this.dataProcessor.getAllFeatureIdsOfGeoObjects();\n        if (featureIdsOfGeoObjects.length > 0) {\n            let viewProjection = this.map.getView().getProjection();\n            let viewResolution = this.map.getView().getResolution();\n            let geoObjectLayer = new GeoObjectLayer(featureIdsOfGeoObjects, featureId => this.dataProcessor.getGeoObjectsForFeature(featureId), GeoMapComponent_1.metersToMapUnitFactory(viewResolution, viewProjection), viewProjection.getCode());\n            layers.push(geoObjectLayer);\n        }\n        if (GeoMapComponent_1.shouldDrawFeatureBoundaries(geoConfig, chartType)) {\n            let topologyLayer = new TopologyLayer({\n                loader: new PolygonFeatureLoader({\n                    level: geoConfig.getType(),\n                    country: geoConfig.getParent() && geoConfig.getParent().getFixedValue(),\n                    customFileGuid: geoConfig.getCustomFileGuid(),\n                    filter: (feature) => this.shouldDrawFeature(!!tileLayer, feature),\n                }),\n                boundaryColor: CHOROPLETH_DIV_2_BOUNDARY_COLOR,\n                fillColor: (feature) => this.getFillColorForFeature(feature),\n                // For Geo bubble, we will show labels on BubbleLayer\n                label: chartType === chartTypeSpecificationService.chartTypes.GEO_AREA\n                    ? ((feature) => this.getDataLabelForFeature(feature)) : void 0,\n                size: this.map ? this.map.getSize() : []\n            });\n            layers.push(topologyLayer);\n        }\n        if (chartType === chartTypeSpecificationService.chartTypes.GEO_BUBBLE) {\n            let maxBubbleRadius = GeoMapComponent_1.getMaxBubbleRadiusForGeoConfig(geoConfig);\n            let bubbleLayer = new BubbleLayer({\n                features: this.features,\n                radius: (feature, maxAllowedRadius) => this.getBubbleRadiusForFeature(feature, Math.min(maxBubbleRadius, maxAllowedRadius)),\n                color: (feature) => this.getBubbleColorForFeature(feature),\n                label: (feature) => this.getDataLabelForFeature(feature),\n                size: this.map ? this.map.getSize() : []\n            });\n            layers.push(bubbleLayer);\n        }\n        else if (chartType === chartTypeSpecificationService.chartTypes.GEO_HEATMAP) {\n            let heatMapLayer = new HeatMapLayer({\n                features: this.features,\n                weight: (feature) => {\n                    let dataPoints = this.dataProcessor.getDataPointsForFeature(feature.getProperties());\n                    if (!dataPoints || dataPoints.length === 0) {\n                        return 0;\n                    }\n                    return HEATMAP_WEIGHT_BASE\n                        + HEATMAP_WEIGHT_FRACTION * dataPoints[0].measureRangeFraction;\n                }\n            });\n            layers.push(heatMapLayer);\n        }\n        this.layerGroup.getLayers().extend(layers);\n        return this.getAllLayersLoadedPromise().then(() => {\n            this.updateViewport();\n        });\n    }\n    scaleMapBasedOnViewport() {\n        if (this.map && this.map.getSize()[0] >= chartScreen.FHD_MIN) {\n            this.fitMapToData();\n        }\n        const topLayer = this.getTopLayer();\n        const source = topLayer.getSource();\n        if (!source.setStyle)\n            return;\n        source.setStyle((feature, resolution) => topLayer.getStylesForFeature(feature, resolution, false /* isHovered */, this.map.getSize()));\n    }\n    updateViewport() {\n        if (!this.hasNoViewPortDefined()) {\n            this.centerOnDefinedViewPort();\n        }\n        else {\n            this.fitMapToData();\n        }\n        this.scaleMapBasedOnViewport();\n    }\n    hasNoViewPortDefined() {\n        return this.chartModel.getMapViewport() === void 0;\n    }\n    centerOnDefinedViewPort() {\n        const mapView = this.chartModel.getMapViewport();\n        const view = this.map.getView();\n        const newCenter = view.constrainCenter(mapView.center);\n        let zoomLevelToSet = mapView.zoomLevel;\n        let centerToSet = mapView.center;\n        //this is a fail-safe added to ensure that in case center saved is somehow an arbitary\n        //number which does lie in the constrained view port defined, we reset the center to default\n        if (mapView.center[0] !== newCenter[0] ||\n            mapView.center[1] !== newCenter[1]) {\n            zoomLevelToSet = defaultZoom;\n            centerToSet = defaultCenter;\n        }\n        this.chartModel.setMapViewport({\n            zoomLevel: zoomLevelToSet,\n            center: centerToSet\n        });\n        view.setCenter(centerToSet);\n        view.setZoom(zoomLevelToSet);\n    }\n    updateColorScale() {\n        if (this.chartModel.getChartType() !== chartTypeSpecificationService.chartTypes.GEO_AREA) {\n            this.colorScaleCtrl = null;\n            return;\n        }\n        let series = this.dataProcessor.getAllSeries();\n        let visibleSeries = series.filter((serie) => {\n            return !_.has(serie, 'visible') || serie.visible === true;\n        });\n        this.colorScaleCtrl = null;\n        if (visibleSeries.length === 1) {\n            let serie = visibleSeries[0];\n            if (!!serie.isRangeValid) {\n                this.colorScaleCtrl = new ColorScaleComponent({\n                    colors: chroma.scale(serie.scale),\n                    leftText: this.dataProcessor.getFormattedYValue(serie.minDataPoint).value,\n                    rightText: this.dataProcessor.getFormattedYValue(serie.maxDataPoint).value,\n                });\n            }\n        }\n    }\n};\nGeoMapComponent = GeoMapComponent_1 = tslib_1.__decorate([\n    Component({\n        name: 'bkGeoMap',\n        templateUrl: 'src/modules/viz-layout/viz/chart/geomap/2d/blink-geo-map.html'\n    })\n], GeoMapComponent);\nexport { GeoMapComponent };\n//# sourceMappingURL=blink-geo-map.js.map"],"names":["tslib_1.__decorate","jsonConstants","GeoEntityMatchingService","create","Logger","util","chartTypeSpecificationService.chartTypes","blinkConstants","assign","GeoObjectLayer","ColorScaleComponent"],"mappings":"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"}