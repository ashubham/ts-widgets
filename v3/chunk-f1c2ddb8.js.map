{"version":3,"file":"chunk-f1c2ddb8.js","sources":["../../../app/.tmp/ts-out/src/base/scaling-service.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/highcharts/highchart-theme-screen-util.js","../../../app/.tmp/ts-out/src/modules/viz-layout/viz/chart/chart-theme-screen-service.js"],"sourcesContent":["/**\n * Copyright: ThoughtSpot Inc. 2012-2018\n * Author: Brian Nguyen (brian.nguyen@thoughtspot.com)\n *\n * @fileoverview Service used for to scale the page based on breakpoints. This method is used\n * instead of css media queries to compensate for browser zoom.\n * If css media queries is used, when the user does browser zoom, the breakpoint will change\n * and provide an unexpected behavior\n */\n'use strict';\nimport _ from 'lodash';\nimport { isAppInIFrame } from '../modules/client-state-service';\nimport { Provide } from './decorators';\nconst hdScalingClassName = 'rd-scaling-hd';\nconst fhdScalingClassName = 'rd-scaling-fhd';\nconst qhdScalingClassName = 'rd-scaling-qhd';\nconst uhdScalingClassName = 'rd-scaling-uhd';\nexport const SCALING_CLASS_NAMES = [\n    hdScalingClassName,\n    fhdScalingClassName,\n    qhdScalingClassName,\n    uhdScalingClassName\n];\nconst DEBOUNCING_RESIZE_TIME = 60;\nconst ResponsiveBreakpoints = [\n    {\n        name: 'HD',\n        screenSizeClass: 0 /* HD */,\n        minWidth: 0,\n        maxWidth: 1600,\n        className: hdScalingClassName\n    }, {\n        name: 'FHD',\n        screenSizeClass: 1 /* FHD */,\n        minWidth: 1600,\n        maxWidth: 1920,\n        className: fhdScalingClassName\n    }, {\n        name: 'QHD',\n        screenSizeClass: 2 /* QHD */,\n        minWidth: 1920,\n        maxWidth: 2560,\n        className: qhdScalingClassName\n    }, {\n        name: 'UHD',\n        screenSizeClass: 3 /* UHD */,\n        minWidth: 2560,\n        maxWidth: Infinity,\n        className: uhdScalingClassName\n    },\n];\nlet currentResponsiveClassName = '';\nlet scalingDisabled = false;\nexport function getResponsiveBreakpoint() {\n    let screenWidth = isAppInIFrame() ? window.innerWidth : window.outerWidth;\n    let currentBreakpoint = ResponsiveBreakpoints.find((breakpoint) => {\n        return screenWidth >= breakpoint.minWidth && screenWidth <= breakpoint.maxWidth;\n    });\n    return currentBreakpoint;\n}\nfunction updateBreakpointClass() {\n    let oldResponsiveClassName = currentResponsiveClassName;\n    let currentBreakpoint = getResponsiveBreakpoint();\n    currentResponsiveClassName = currentBreakpoint.className;\n    $('html').removeClass(oldResponsiveClassName);\n    $('html').addClass(currentResponsiveClassName);\n}\nlet debouncedResizeHandler = _.debounce(() => {\n    // If the application is embed, innerWidth needs to be used instead of outerWidth\n    updateBreakpointClass();\n}, DEBOUNCING_RESIZE_TIME);\nexport function initializeScaling() {\n    scalingDisabled = false;\n    updateBreakpointClass();\n    window.addEventListener('resize', debouncedResizeHandler);\n}\nexport function terminateScaling(disableScaling = false) {\n    scalingDisabled = disableScaling;\n    $('html').removeClass(currentResponsiveClassName);\n    currentResponsiveClassName = '';\n    debouncedResizeHandler.cancel();\n    window.removeEventListener('resize', debouncedResizeHandler);\n}\nexport function resumeScalingIfNeeded() {\n    if (scalingDisabled) {\n        initializeScaling();\n    }\n}\nexport function disableScalingIfNeeded() {\n    if (!!currentResponsiveClassName) {\n        terminateScaling(true);\n    }\n}\nProvide('scalingService')({\n    resumeScalingIfNeeded,\n    disableScalingIfNeeded,\n    terminateScaling,\n    initializeScaling,\n    getResponsiveBreakpoint\n});\n//# sourceMappingURL=scaling-service.js.map","///<reference path=\"highchart-theme-screen-util.d.ts\" />\nimport _ from 'lodash';\nimport { getWidthForArrayOfStrings } from '../../../../../base/font-metric/font-metric-service';\nimport { getResponsiveBreakpoint } from '../../../../../base/scaling-service';\nimport { ChartThemeService } from '../chart-theme-service';\nexport function castAxisConfig(config, axisDetails) {\n    let xAxisDetails = axisDetails.x;\n    let xAxisConfig = config.config.xAxis;\n    if (Array.isArray(xAxisDetails)) {\n        config.config.xAxis = xAxisDetails.map(() => xAxisConfig);\n    }\n    let yAxisDetails = axisDetails.y;\n    let yAxisConfig = config.config.yAxis;\n    if (Array.isArray(yAxisDetails)) {\n        config.config.yAxis = yAxisDetails.map(() => yAxisConfig);\n    }\n    return config;\n}\n// highcharts properties that needs to be scaled\nfunction getChartScalingProps(width, xGridLineEnabled, yGridLineEnabled, axisDetails, shouldScale, chartModel) {\n    let screenSizeClass = 0 /* HD */;\n    if (shouldScale) {\n        let currentBreakpoint = getResponsiveBreakpoint();\n        screenSizeClass = currentBreakpoint.screenSizeClass;\n    }\n    let config = {};\n    let fontSize, lineWidth, padding;\n    if (screenSizeClass === 0 /* HD */) {\n        fontSize = '12px';\n        lineWidth = 1;\n        config = {\n            meta: {\n                legendEnabled: true\n            },\n            config: {\n                spacingTop: 15,\n                spacingLeft: 3,\n                spacingRight: 3,\n                spacingBottom: 0,\n                tooltip: {\n                    style: {\n                        padding: '15px'\n                    }\n                },\n                xAxis: {\n                    labels: {\n                        y: 20,\n                        autoRotationLimit: 60,\n                        padding: 15,\n                        //Need to set rotation to undefined explicitly as when present mode is\n                        // closed, the rotation should be set to default. otherwise old value in\n                        // highchart will not get reset and it assumes to rotate labels always.\n                        rotation: undefined\n                    },\n                    title: {\n                        margin: 20\n                    }\n                },\n                yAxis: {\n                    minPadding: 0,\n                    tickPixelInterval: 100\n                },\n            }\n        };\n    }\n    else if (screenSizeClass === 1 /* FHD */) {\n        fontSize = '16px';\n        lineWidth = 2;\n        config = {\n            meta: {\n                legendEnabled: false\n            },\n            config: {\n                spacingTop: 20,\n                spacingLeft: 4,\n                spacingRight: 4,\n                spacingBottom: 0,\n                tooltip: {\n                    style: {\n                        padding: '20px'\n                    }\n                },\n                xAxis: {\n                    labels: {\n                        y: 28,\n                        autoRotationLimit: 60,\n                        padding: 20,\n                        rotation: undefined\n                    },\n                    title: {\n                        margin: 28\n                    }\n                },\n                yAxis: {\n                    padding: 5,\n                    tickPixelInterval: 135\n                },\n            }\n        };\n    }\n    else if (screenSizeClass === 2 /* QHD */) {\n        fontSize = '24px';\n        lineWidth = 4;\n        config = {\n            meta: {\n                legendEnabled: false\n            },\n            config: {\n                spacingTop: 30,\n                spacingLeft: 6,\n                spacingRight: 6,\n                spacingBottom: 0,\n                tooltip: {\n                    style: {\n                        padding: '30px'\n                    }\n                },\n                xAxis: {\n                    labels: {\n                        y: 40,\n                        autoRotationLimit: 60,\n                        padding: 30,\n                        rotation: undefined,\n                    },\n                    title: {\n                        margin: 40\n                    }\n                },\n                yAxis: {\n                    padding: 10,\n                    tickPixelInterval: 200\n                },\n            }\n        };\n    }\n    else if (screenSizeClass === 3 /* UHD */) {\n        fontSize = '48px';\n        lineWidth = 6;\n        padding = 60;\n        config = {\n            meta: {\n                legendEnabled: false\n            },\n            config: {\n                spacingTop: 60,\n                spacingLeft: 12,\n                spacingRight: 12,\n                spacingBottom: 0,\n                tooltip: {\n                    style: {\n                        padding: '60px'\n                    }\n                },\n                xAxis: {\n                    labels: {\n                        y: 80,\n                        padding: 60,\n                        rotation: undefined\n                    },\n                    title: {\n                        margin: 80\n                    }\n                },\n                yAxis: {\n                    padding: 20,\n                    tickPixelInterval: 400\n                },\n            }\n        };\n        if (shouldRotateLabels(chartModel, width, fontSize, padding)) {\n            //TODO::check on rotation values\n            config.config.xAxis.labels.rotation = -45;\n        }\n        else {\n            config.config.xAxis.labels.autoRotationLimit = 60;\n        }\n    }\n    _.merge(config, {\n        config: {\n            borderWidth: lineWidth,\n            colorAxis: {\n                labels: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                }\n            },\n            plotOptions: {\n                series: {\n                    dataLabels: {\n                        style: {\n                            fontSize: fontSize\n                        }\n                    }\n                },\n                line: {\n                    lineWidth: lineWidth,\n                    states: {\n                        hover: {\n                            lineWidth: lineWidth * 2,\n                        }\n                    }\n                },\n                pie: {\n                    dataLabels: {\n                        connectorWidth: lineWidth\n                    }\n                },\n                scatter: {\n                    marker: {\n                        radius: 5 * lineWidth,\n                        lineWidth: lineWidth,\n                    }\n                },\n            },\n            tooltip: {\n                style: {\n                    fontSize: fontSize,\n                }\n            },\n            legend: {\n                title: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                },\n                itemStyle: {\n                    fontSize: fontSize\n                }\n            },\n            xAxis: {\n                gridLineWidth: xGridLineEnabled ? lineWidth : 0,\n                stackLabels: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                },\n                labels: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                },\n                title: {\n                    style: {\n                        fontSize: fontSize\n                    },\n                }\n            },\n            yAxis: {\n                gridLineWidth: yGridLineEnabled ? lineWidth : 0,\n                stackLabels: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                },\n                labels: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                },\n                title: {\n                    style: {\n                        fontSize: fontSize\n                    }\n                }\n            },\n        }\n    });\n    return config;\n}\nfunction shouldRotateLabels(chartModel, width, fontSize, padding) {\n    const fontDetails = ChartThemeService.getDefaultTheme().xAxis.labels.style;\n    const font = fontSize + ' ' + fontDetails.fontFamily;\n    const dataModel = chartModel.getDataModel();\n    return getWidthForArrayOfStrings(dataModel.xValueToRawValues, font, padding) > width;\n}\n// Combine axisConfig and base chart config\nexport function BuildHighchartStyleConfig(width, defaultScreenConfig, axisDetails, shouldScale, chartModel) {\n    return getChartScalingProps(width, defaultScreenConfig.xGridlineEnabled, defaultScreenConfig.yGridlineEnabled, axisDetails, shouldScale, chartModel);\n}\n//# sourceMappingURL=highchart-theme-screen-util.js.map","import _ from 'lodash';\nimport { getResponsiveBreakpoint } from '../../../../base/scaling-service';\nimport { BuildHighchartStyleConfig, castAxisConfig } from '../../../viz-layout/viz/chart/highcharts/highchart-theme-screen-util';\nimport { chartTypes } from './chart-type-specification-service';\nexport function getHighchartScreenConfig(width, defaultScreenConfig = {}, axisDetails = { x: {}, y: {} }, shouldScale, chartModel) {\n    const styleConfig = BuildHighchartStyleConfig(width, defaultScreenConfig, axisDetails, shouldScale, chartModel);\n    if (chartModel.getChartType() === chartTypes.BAR ||\n        chartModel.getChartType() === chartTypes.STACKED_BAR) {\n        return getBarChartScreenConfig(styleConfig, shouldScale);\n    }\n    return castAxisConfig(styleConfig, axisDetails);\n}\n//TODO: Create a bar specific screen config possibly merge with chart-type-specification-service\nfunction getBarChartScreenConfig(styleConfig, shouldScale) {\n    delete styleConfig.config.xAxis.labels.y;\n    if (shouldScale) {\n        _.set(styleConfig.config, `yAxis.stackLabels.y`, getStackedBarStackedLabelsY());\n    }\n    return styleConfig;\n}\nexport function getSankeyChartScreenConfig(shouldScale) {\n    let screenSizeClass = 0 /* HD */;\n    if (shouldScale) {\n        let currentBreakpoint = getResponsiveBreakpoint();\n        screenSizeClass = currentBreakpoint.screenSizeClass;\n    }\n    if (screenSizeClass === 0 /* HD */) {\n        return {\n            fontSize: '12px',\n        };\n    }\n    else if (screenSizeClass === 1 /* FHD */) {\n        return {\n            fontSize: '16px',\n        };\n    }\n    else if (screenSizeClass === 2 /* QHD */) {\n        return {\n            fontSize: '24px',\n        };\n    }\n    else if (screenSizeClass === 3 /* UHD */) {\n        return {\n            fontSize: '48px',\n        };\n    }\n}\nexport function getGeoMapScreenConfig(shouldScale) {\n    let screenSizeClass = 0 /* HD */;\n    if (shouldScale) {\n        let currentBreakpoint = getResponsiveBreakpoint();\n        screenSizeClass = currentBreakpoint.screenSizeClass;\n    }\n    if (screenSizeClass === 0 /* HD */) {\n        return {\n            fontSize: '12px Verdana',\n            strokeWidth: 1\n        };\n    }\n    else if (screenSizeClass === 1 /* FHD */) {\n        return {\n            fontSize: '16px Verdana',\n            strokeWidth: 2\n        };\n    }\n    else if (screenSizeClass === 2 /* QHD */) {\n        return {\n            fontSize: '24px Verdana',\n            strokeWidth: 4\n        };\n    }\n    else if (screenSizeClass === 3 /* UHD */) {\n        return {\n            fontSize: '48px Verdana',\n            strokeWidth: 6\n        };\n    }\n}\nexport function getStackedBarStackedLabelsY() {\n    let currentBreakpoint = getResponsiveBreakpoint();\n    let screenSizeClass = currentBreakpoint.screenSizeClass || 0 /* HD */;\n    switch (screenSizeClass) {\n        case 0 /* HD */:\n            return 4;\n        case 1 /* FHD */:\n            return 6;\n        case 2 /* QHD */:\n            return 8;\n        case 3 /* UHD */:\n            return 16;\n    }\n}\n//# sourceMappingURL=chart-theme-screen-service.js.map"],"names":[],"mappings":"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"}